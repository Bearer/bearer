name: Test Linux package build/publish
on:
  push:
    branches:
      - 337-support-installation-via-the-most-common-linux-package-managers

permissions:
  contents: write
  packages: write

jobs:
  tag:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Bump version and push tag
        if: startsWith(github.ref, 'refs/tags') != true
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: v
          default_bump: patch
          append_to_pre_release_tag: "test-linux"
    outputs:
      ref: refs/tags/${{ steps.tag_version.outputs.new_tag || github.ref_name }}

  build-linux:
    needs: [tag]
    name: build-linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ needs.tag.outputs.ref }}
      - run: git fetch --force --tags
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y gcc-multilib g++-multilib

      # - name: Install cross-compiler for linux/arm64
      #   run: sudo apt-get -y install gcc-aarch64-linux-gnu

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Show available Docker Buildx platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - id: cache
        uses: actions/cache@v3
        with:
          path: dist/linux
          key: linux-${{ env.sha_short }}-test-linux
      - uses: goreleaser/goreleaser-action@v4
        if: steps.cache.outputs.cache-hit != 'true' # do not run if cache hit
        name: Run GoReleaser
        with:
          distribution: goreleaser-pro
          version: latest
          args: release --skip-docker --rm-dist --split -f ./.goreleaser/test-linux.yaml
        env:
          GOOS: linux
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

  publish:
    needs: [tag, build-linux]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ needs.tag.outputs.ref }}
      - run:
          git fetch --force --tags
          # copy the cashes from prepare
      - shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: dist/linux
          key: linux-${{ env.sha_short }}-test-linux
      - name: Release
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser-pro
          args: publish --merge
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          FURY_TOKEN: ${{ secrets.FURY_TOKEN }}
