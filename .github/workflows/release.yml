name: Release
on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write

jobs:
  tag:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Bump version and push tag
        if: startsWith(github.ref, 'refs/tags') != true
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: v
          default_bump: patch
    outputs:
      ref: refs/tags/${{ steps.tag_version.outputs.new_tag || github.ref_name }}

  build-linux:
    needs: [tag]
    name: build-linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ needs.tag.outputs.ref }}
      - run: git fetch --force --tags
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y gcc-multilib g++-multilib
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --skip-publish -f ./goreleaser/linux.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: curio-linux
          path: dist/curio*

  build-darwin:
    needs: [tag]
    name: build-darwin
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ needs.tag.outputs.ref }}
      - run: git fetch --force --tags
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Setup Gon
        run: brew install mitchellh/gon/gon
      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          # The certificates in a PKCS12 file encoded as a base64 string
          p12-file-base64: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_P12_BASE64 }}
          # The password used to import the PKCS12 file.
          p12-password: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_PASSWORD }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --skip-publish -f ./goreleaser/darwin.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AC_USERNAME: ${{ secrets.AC_USERNAME }}
          AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: curio-darwin
          path: |
            dist/curio*.tar.gz
            dist/curio*checksums.txt

  publish:
    needs: [tag, build-linux, build-darwin]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ needs.tag.outputs.ref }}
      - run: git fetch --force --tags
      - name: Make directories
        run: |
          mkdir -p ./curio-build/linux
          mkdir -p ./curio-build/darwin
      - name: Download linux binaries
        uses: actions/download-artifact@v3
        with:
          name: curio-linux
          path: ./curio-build/linux
      - name: Download darwin binaries
        uses: actions/download-artifact@v3
        with:
          name: curio-darwin
          path: ./curio-build/darwin
      - name: Merge checksum file
        run: |
          cd ./curio-build
          cat ./linux/curio*checksums.txt >> checksums.txt
          cat ./darwin/curio*checksums.txt >> checksums.txt
          rm ./darwin/curio*checksums.txt
          rm ./linux/curio*checksums.txt
      - name: Release
        uses: goreleaser/goreleaser-action@v4
        with:
          args: release --config ./goreleaser/release.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
