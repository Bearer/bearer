name: Battle Tests
on:
  push:
    branches:
      - AMA-3210/backport-battle-test
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ needs.tag.outputs.ref }}

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      # - name: Login to DockerHub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Retrieve latest Linux Artifact
        uses: dsaltares/fetch-gh-release-asset@1.1.0
        with:
          repo: "Bearer/curio"
          # version: defaults to latest
          version: "tags/v0.5.0"
          file: "curio_0.5.0_linux_amd64.tar.gz"

      - name: Extract artifact
        run: |
          tar -xzvf curio_0.5.0_linux_amd64.tar.gz
          ls -ltr
          mkdir dist
          cp curio dist/

      - name: Build and push latest
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: battle_tests/Dockerfile
          tags: bearersh/battle-test:latest
          # build-args: |
          #   BROKER_COMMIT_SHA=${{ github.sha }}
          #   BROKER_VERSION=${{ github.ref_name }}

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      #     role-session-name: github-action-battle-test
      #     aws-region: eu-west-1
      #     role-skip-session-tagging: true
      #     role-duration-seconds: 3600

      # - name: Run task
      #   uses: ./.github/actions/run-task
      #   env:
      #     CLUSTER: ${{ secrets.CLUSTER }}
      #     TASK_DEFINITION: ${{ secrets.TASK_DEFINITION }}
      #     SUBNET: ${{ secrets.SUBNET }}
      #     SECURITY_GROUP: ${{ secrets.SECURITY_GROUP }}
      #     CONCURRENT_TASKS: 5
