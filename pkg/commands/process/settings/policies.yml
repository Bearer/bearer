logger_leaks:
  description: "Logger leaks detected"
  name: "Logger leaking"
  id: "detect_ruby_logger"
  query: |
    critical = data.bearer.leakage.critical
    high = data.bearer.leakage.high
  modules:
    - path: policies/leakage.rego
      name: bearer.leakage
session_leaks:
  description: "Session leaks detected"
  name: "Session leaking"
  id: "detect_rails_session"
  query: |
    critical = data.bearer.leakage.critical
    high = data.bearer.leakage.high
  modules:
    - path: policies/leakage.rego
      name: bearer.leakage
jwt_leaks:
  description: "JWT leaks detected"
  name: "JWT leaking"
  id: "detect_rails_jwt"
  query: |
    critical = data.bearer.leakage.critical
    high = data.bearer.leakage.high
  modules:
    - path: policies/leakage.rego
      name: bearer.leakage
ssl_certificate_verification_disabled:
  description: "SSL certificate verification disabled in an application processing sensitive data"
  name: "SSL certificate verification disabled"
  id: "ssl_certificate_verification_disabled"
  query: |
    medium = data.bearer.ssl_certificate_verification_disabled.medium
  modules:
    - path: policies/ssl_certificate_verification_disabled.rego
      name: bearer.ssl_certificate_verification_disabled
application_level_encryption_missing:
  description: "Application level encryption missing"
  name: "Application level encryption missing"
  id: "detect_sql_create_public_table"
  query: |
    critical = data.bearer.application_level_encryption.critical
    high = data.bearer.application_level_encryption.high
  modules:
    - path: policies/application_level_encryption.rego
      name: bearer.application_level_encryption
insecure_smtp_processing_sensitive_data:
  description: "Communication with insecure SMTP in an application processing sensitive data"
  name: "Insecure SMTP"
  id: "detect_rails_insecure_smtp"
  query: |
    medium = data.bearer.insecure_smtp.medium
  modules:
    - path: policies/insecure_smtp.rego
      name: bearer.insecure_smtp
http_get_parameters:
  description: "Sending data as HTTP GET parameters"
  name: "HTTP GET parameters"
  id: "ruby_http_get_detection"
  query: |
    critical = data.bearer.http_get_parameters.critical
    high = data.bearer.http_get_parameters.high
  modules:
    - path: policies/http_get_parameters.rego
      name: bearer.http_get_parameters
insecure_communication_processing_sensitive_data:
  description: "Insecure communication in an application processing sensitive data"
  name: "Insecure communication"
  id: "detect_rails_insecure_communication"
  query: |
    medium = data.bearer.insecure_communication.medium
  modules:
    - path: policies/insecure_communication.rego
      name: bearer.insecure_communication
insecure_ftp_processing_sensitive_data:
  description: "Communication with insecure FTP in an application processing sensitive data"
  name: "Insecure FTP"
  id: "detect_rails_insecure_ftp"
  query: |
    medium = data.bearer.insecure_ftp.medium
  modules:
    - path: policies/insecure_ftp.rego
      name: bearer.insecure_ftp
