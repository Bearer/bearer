logger_leaks:
  description: "Logger leaks detected. Avoid passing sensitive data to loggers."
  name: "Do not send sensitive data to loggers."
  display_id: "CR-001"
  id: "detect_ruby_logger"
  query: |
    policy_failure = data.bearer.leakage.policy_failure
  modules:
    - path: policies/common.rego
      name: bearer.common
    - path: policies/leakage.rego
      name: bearer.leakage
session_leaks:
  description: "Session leaks detected. Avoid storing sensitive data in the session."
  name: "Do not store sensitive data in the session."
  display_id: "CR-003"
  id: "detect_rails_session"
  query: |
    policy_failure = data.bearer.leakage.policy_failure
  modules:
    - path: policies/common.rego
      name: bearer.common
    - path: policies/leakage.rego
      name: bearer.leakage
jwt_leaks:
  description: "JWT leaks detected. Avoid storing sensitive data in JWTs."
  name: "Do not store sensitive data in JWTs."
  display_id: "CR-004"
  id: "detect_rails_jwt"
  query: |
    policy_failure = data.bearer.leakage.policy_failure
  modules:
    - path: policies/common.rego
      name: bearer.common
    - path: policies/leakage.rego
      name: bearer.leakage
cookie_leaks:
  description: "Cookie leaks detected. Avoid storing sensitive data in cookies."
  name: "Do not store sensitive data in cookies."
  display_id: "CR-002"
  id: "detect_rails_cookies"
  query: |
    policy_failure = data.bearer.leakage.policy_failure
  modules:
    - path: policies/common.rego
      name: bearer.common
    - path: policies/leakage.rego
      name: bearer.leakage
ssl_certificate_verification_disabled:
  description: "SSL certificate verification is disabled in an application processing sensitive data. Enable SSL certificate verification."
  name: "Enable SSL Certificate Verification in applications processing sensitive data."
  display_id: "CR-011"
  id: "ssl_certificate_verification_disabled"
  query: |
    policy_failure = data.bearer.ssl_certificate_verification_disabled.policy_failure
  modules:
    - path: policies/common.rego
      name: bearer.common
    - path: policies/ssl_certificate_verification_disabled.rego
      name: bearer.ssl_certificate_verification_disabled
application_level_encryption_missing:
  description: "Application level encryption missing. Enable application level encryption to reduce the risk of leaking sensitive data."
  name: "Force application-level encryption when processing sensitive data."
  display_id: "CR-021"
  id: "application_level_encryption_missing"
  query: |
    policy_failure = data.bearer.application_level_encryption.policy_failure
  modules:
    - path: policies/common.rego
      name: bearer.common
    - path: policies/application_level_encryption.rego
      name: bearer.application_level_encryption
insecure_smtp_processing_sensitive_data:
  description: "Communication using insecure SMTP in an application processing sensitive data. Verify that SMTP settings use OpenSSL or equivalent."
  name: "Only communicate with secure SMTP connections in applications processing sensitive data."
  display_id: "CR-010"
  id: "detect_rails_insecure_smtp"
  query: |
    policy_failure = data.bearer.insecure_smtp.policy_failure
  modules:
    - path: policies/common.rego
      name: bearer.common
    - path: policies/insecure_smtp.rego
      name: bearer.insecure_smtp
http_get_parameters:
  description: "Sending data as HTTP GET parameters. Avoid sending sensitive data as parameters in GET requests."
  name: "Do not store sensitive data in HTML5 storage"
  display_id: "CR-005"
  id: "ruby_http_get_detection"
  query: |
    policy_failure = data.bearer.http_get_parameters.policy_failure
  modules:
    - path: policies/common.rego
      name: bearer.common
    - path: policies/http_get_parameters.rego
      name: bearer.http_get_parameters
insecure_communication_processing_sensitive_data:
  description: "Insecure communication in an application processing sensitive data. Ensure communication occurs over SSL."
  name: "Force HTTPS in applications processing sensitive data."
  display_id: "CR-012"
  id: "detect_rails_insecure_communication"
  query: |
    policy_failure = data.bearer.insecure_communication.policy_failure
  modules:
    - path: policies/common.rego
      name: bearer.common
    - path: policies/insecure_communication.rego
      name: bearer.insecure_communication
insecure_ftp_processing_sensitive_data:
  description: "Communication with an insecure FTP server in an application processing sensitive data. Only connect to FTP securely."
  name: "Only send sensitive data to FTP connections securely."
  display_id: "CR-009"
  id: "detect_rails_insecure_ftp"
  query: |
    policy_failure = data.bearer.insecure_ftp.policy_failure
  modules:
    - path: policies/common.rego
      name: bearer.common
    - path: policies/insecure_ftp.rego
      name: bearer.insecure_ftp
insecure_ftp_with_data_category:
  description: "Communicating Data Category with an insecure FTP server. Only connect to FTP securely."
  name: "Only communicate with secure FTP connections in applications processing sensitive data."
  display_id: "CR-008"
  id: insecure_ftp_with_data_category
  query: |
    policy_failure = data.bearer.insecure_ftp_with_data_category.policy_failure
  modules:
    - path: policies/common.rego
      name: bearer.common
    - path: policies/insecure_ftp_with_data_category.rego
      name: bearer.insecure_ftp_with_data_category
insecure_http_get:
  description: "Communicating using insecure HTTP GET in an application processing sensitive data. Ensure all HTTP communication occurs over HTTPS."
  name: "Avoid unsecured HTTP connections in applications processing sensitive data."
  display_id: "CR-013"
  id: insecure_http_get
  query: |
    policy_failure = data.bearer.insecure_http_get.policy_failure
  modules:
    - path: policies/common.rego
      name: bearer.common
    - path: policies/insecure_http_get.rego
      name: bearer.insecure_http_get
insecure_http_with_data_category:
  description: "Communicating Data Category using insecure HTTP. Ensure all HTTP communication occurs over HTTPS."
  name: "Do not pass sensitive data as HTTP GET parameters."
  display_id: "CR-015"
  id: insecure_http_with_data_category
  query: |
    policy_failure = data.bearer.insecure_http_with_data_category.policy_failure
  modules:
    - path: policies/common.rego
      name: bearer.common
    - path: policies/insecure_http_with_data_category.rego
      name: bearer.insecure_http_with_data_category
sending_data_in_category_to_third_party:
  description: "Sending data in category to third party. Ensure data sent to third party is intended and secured."
  name: "Ensure that no unsecured Third Parties receive sensitive data."
  display_id: "CR-016"
  id: "detect_ruby_third_party_data_send"
  query: |
    policy_failure = data.bearer.third_party_data_category.policy_failure
  modules:
    - path: policies/common.rego
      name: bearer.common
    - path: policies/third_party_data_category.rego
      name: bearer.third_party_data_category
weak_password_encryption:
  description: "Weak encryption or hashing library used to encrypt password. Use a stronger algorithm."
  name: "Force strong password encryption in applications processing sensitive data."
  display_id: "CR-023"
  id: "detect_ruby_weak_encryption"
  query: |
    policy_failure = data.bearer.weak_password_encryption.policy_failure
  modules:
    - path: policies/common.rego
      name: bearer.common
    - path: policies/encryption_common.rego
      name: bearer.encryption_common
    - path: policies/weak_password_encryption.rego
      name: bearer.weak_password_encryption
password_length:
  description: "Minimum password length violation detected. Make sure your passwords have sufficient length."
  name: "Enforce stronger password requirements in applications processing sensitive data."
  display_id: "CR-019"
  id: "ruby_password_length"
  query: |
    policy_breach = data.bearer.password_length.policy_breach
  modules:
    - path: policies/common.rego
      name: bearer.common
    - path: policies/password_length.rego
      name: bearer.password_length
weak_encryption_library:
  description: "Weak encryption or hashing library detected. Consider using a different library."
  name: "Avoid weak encryption library."
  display_id: "CR-024"
  id: "detect_ruby_weak_encryption_library"
  query: |
    policy_failure = data.bearer.weak_encryption_library.policy_failure
  modules:
    - path: policies/common.rego
      name: bearer.common
    - path: policies/encryption_common.rego
      name: bearer.encryption_common
    - path: policies/weak_encryption_library.rego
      name: bearer.weak_encryption_library
