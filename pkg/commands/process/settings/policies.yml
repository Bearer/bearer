logger_leaks:
  description: "Logger leaks detected"
  name: "Logger leaking"
  id: "detect_ruby_logger"
  query: |
    critical = data.bearer.leakage.critical
    high = data.bearer.leakage.high
  modules:
    - path: policies/leakage.rego
      name: bearer.leakage
session_leaks:
  description: "Session leaks detected"
  name: "Session leaking"
  id: "detect_rails_session"
  query: |
    critical = data.bearer.leakage.critical
    high = data.bearer.leakage.high
  modules:
    - path: policies/leakage.rego
      name: bearer.leakage
jwt_leaks:
  description: "JWT leaks detected"
  name: "JWT leaking"
  id: "detect_rails_jwt"
  query: |
    critical = data.bearer.leakage.critical
    high = data.bearer.leakage.high
  modules:
    - path: policies/leakage.rego
      name: bearer.leakage
application_level_encryption_missing:
  description: "Application level encryption missing"
  name: "Application level encryption missing"
  id: "detect_sql_create_public_table"
  query: |
    critical = data.bearer.application_level_encryption.critical
    high = data.bearer.application_level_encryption.high
  modules:
    - path: policies/application_level_encryption.rego
      name: bearer.application_level_encryption
insecure_smtp_processing_sensitive_data:
  description: "Communication with insecure SMTP in an application processing sensitive data"
  name: "Insecure SMTP"
  id: "detect_rails_insecure_smtp"
  query: |
    medium = data.bearer.insecure_smtp.medium
  modules:
    - path: policies/insecure_smtp.rego
      name: bearer.insecure_smtp
