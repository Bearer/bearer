patterns:
  - pattern: |
      { __html: $<DATA> }
    filters:
      - not:
          variable: DATA
          detection: javascript_react_dangerously_set_inner_html_sanitzed_input
auxiliary:
  - id: javascript_react_dangerously_set_inner_html_sanitzed_input
    patterns:
      - pattern: |
          $<STRING_LITERAL>
        filters:
          - variable: STRING_LITERAL
            detection: string_literal
            contains: false
      - sanitize($<_>)
      - sanitizeHTML($<_>)
languages:
  - javascript
trigger: presence
severity: high
metadata:
  description: "React's dangerously set inner HTML detected."
  remediation_message: |
    ## Description
    There are Cross-Site Scripting (XSS) vulnerabilites when using React's dangerouslySetInnerHTML with unsanitized data.

    ## Remediations
    âœ… Sanitize data when using dangerouslySetInnerHTML

    ```javascript
      <div
        dangerouslySetInnerHTML={{__html: sanitize(data)}}
      />
    ```

    ## Resources
    - [OWASP Cross-Site Scripting (XSS) Cheatsheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)
  cwe_id:
    - 79
  id: "javascript_react_dangerously_set_inner_html"
