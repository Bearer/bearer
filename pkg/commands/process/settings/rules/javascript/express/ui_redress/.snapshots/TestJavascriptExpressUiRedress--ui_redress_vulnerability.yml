low:
    - rule:
        cwe_ids:
            - "1021"
        id: javascript_express_ui_redress
        title: User Interface (UI) redress vulnerability (clickjacking) detected.
        description: |
            ## Description
            Using unsanitized user input to set X-Frame-Options or Content-Security-Policy HTTP headers puts your application at risk for UI redress attacks (clickjacking).

            ## Remediations
            ✅ Prefer the most secure values when setting these headers

            ```javascript
            res.set('X-Frame-Options', 'DENY')
            res.set('Content-Security-Policy', "frame-ancestors 'none'")
            ```

            ✅ Avoid using user input directly to set the headers, or use a safelist to guard against clickjacking

            ```javascript
            if (req.query.options === 'same') {
              res.set('X-Frame-Options', 'SAME')
            }

            // safelist
            if (['deny', 'sameorigin'].includes(req.query.options.toLowerCase)) {
              res.set('X-Frame-Options', req.query.options)
            }
            ```

            ## Resources
            - [OWASP Clickjacking attack explained](https://owasp.org/www-community/attacks/Clickjacking)
            - [OWASP Clickjacking defense cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Clickjacking_Defense_Cheat_Sheet.html)
        documentation_url: https://docs.bearer.com/reference/rules/javascript_express_ui_redress
      line_number: 9
      filename: ui_redress_vulnerability.js
      parent_line_number: 9
      snippet: res.set("X-Frame-Options", req.query.options)
      fingerprint: dc8d27767d942ab052ecc13a85754186_0

