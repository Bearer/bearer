patterns:
  - pattern: |
      $<KNEX_CLIENT>.$<METHOD>($<...>$<USER_INPUT>$<...>)
    filters:
      - variable: USER_INPUT
        detection: javascript_express_sql_injection_request_input
      - variable: KNEX_CLIENT
        values:
          - knex
          - knexClient
          - client
      - variable: METHOD
        values:
          - fromRaw
          - whereRaw
          - raw
  - pattern: |
      $<PG_CLIENT>.query($<...>$<USER_INPUT>$<...>)
    filters:
      - variable: PG_CLIENT
        detection: javascript_express_sql_injection_pg_client
      - variable: USER_INPUT
        detection: javascript_express_sql_injection_request_input
  - pattern: |
      $<SEQUELIZE>.query($<USER_INPUT>)
    filters:
      - variable: SEQUELIZE
        detection: javascript_express_sql_injection_sequelize_init
      - variable: USER_INPUT
        detection: javascript_express_sql_injection_request_input
  - pattern: |
      $<MYSQL_CONN>.$<METHOD>($<...>$<USER_INPUT>$<...>)
    filters:
      - variable: MYSQL_CONN
        detection: javascript_express_sql_injection_mysql_conn
      - variable: USER_INPUT
        detection: javascript_express_sql_injection_request_input
      - variable: METHOD
        values:
          - query
          - execute
  - pattern: |
      $<MYSQL_POOL>.query($<...>$<USER_INPUT>$<...>)
    filters:
      - variable: MYSQL_POOL
        detection: javascript_express_sql_injection_mysql_pool
      - variable: USER_INPUT
        detection: javascript_express_sql_injection_request_input
  - pattern: |
      $<CONN>.query($<USER_INPUT>, $<_>)
    filters:
      - variable: CONN
        detection: javascript_express_sql_injection_pool_conn
      - variable: USER_INPUT
        detection: javascript_express_sql_injection_request_input
auxiliary:
  - id: javascript_express_sql_injection_request_input
    patterns:
      - req.params
      - req.query
      - req.body
      - req.cookies
      - req.headers
  - id: javascript_express_sql_injection_pg_client
    patterns:
      - new Client()
  - id: javascript_express_sql_injection_sequelize_init
    patterns:
      - new Sequelize()
  - id: javascript_express_sql_injection_mysql_conn
    patterns:
      - mysql.createConnection()
      - await mysql.createConnection()
  - id: javascript_express_sql_injection_mysql_pool
    patterns:
      - mysql.createPool()
  - id: javascript_express_sql_injection_pool_conn
    patterns:
      - pattern:
          $<MYSQL_POOL>.getConnection(function($<_>, $<!>$<CONN:identifier>) {})
        filters:
          - variable: MYSQL_POOL
            detection: javascript_express_sql_injection_mysql_pool
languages:
  - javascript
trigger: presence
severity: high
metadata:
  description: "SQL injection vulnerability detected."
  remediation_message: |
    ## Description
    Including unsanitized data, such as user input or request data, in raw SQL queries makes your application vulnerable to SQL injection attacks.

    <!--
    ## Remediations
    Coming soon.
    ## Resources
    Coming soon.
    -->
  cwe_id:
    - 89
  id: "javascript_express_sql_injection"
