low:
    - rule:
        cwe_ids:
            - "352"
            - "668"
        id: javascript_express_static_asset_with_session
        title: Static asset with active session detected.
        description: |
            ## Description
            Static assets are often cached by services in front of the application
            (eg. CDNs). Serving static assets with sessions enabled may lead to
            Cross-Site Request Forgery (CSRF) attacks that can hijack a user's session.

            ## Remediations

            ✅ Ensure static resources are handled prior to session initialization:

            ```javascript
              // static middleware should be added before session middleware
              app.use(express.static(__dirname + "/public"))

              app.use(session())
            ```
        documentation_url: https://docs.bearer.com/reference/rules/javascript_express_static_asset_with_session
      line_number: 3
      filename: unsafe.js
      parent_line_number: 3
      snippet: app.use(express.static(__dirname + "/public"))
      fingerprint: 28d21916f3114061f8bd21bed81e2429_0
medium:
    - rule:
        cwe_ids:
            - "523"
            - "522"
        id: express_default_session_config
        title: Session cookie with default config detected.
        description: |
            ## Description
            To make sure session cookies don't open your application up to exploits or unauthorized access, don't use default cookie values.

            ## Remediations
            ✅ Instead of the default session name, use generic names.

            ## Resources
            - [Express Security Best Practices](https://expressjs.com/en/advanced/best-practice-security.html#use-cookies-securely)
        documentation_url: https://docs.bearer.com/reference/rules/express_default_session_config
      line_number: 1
      filename: unsafe.js
      parent_line_number: 1
      snippet: '{}'
      fingerprint: 4ddd326ab62f572775eb70f4bae2ef96_0

