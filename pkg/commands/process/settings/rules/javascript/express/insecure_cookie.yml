patterns:
  - pattern: |
      {
        cookie: {
          $<!>secure: false
        }
      }
  - pattern: |
      {
        cookie: {
          $<!>httpOnly: true
        }
      }
  - pattern: |
      {
        cookie: $<!>$<HASH_CONTENT>
      }
    filters:
      - not:
          variable: HASH_CONTENT
          detection: express_insecure_cookie_name_attribute
  - pattern: |
      {
        cookie: $<!>$<HASH_CONTENT>
      }
    filters:
      - not:
          variable: HASH_CONTENT
          detection: express_insecure_cookie_expiry_attribute
  - pattern: |
      {
        cookie: $<!>$<HASH_CONTENT>
      }
    filters:
      - not:
          variable: HASH_CONTENT
          detection: express_insecure_cookie_path_attribute
  - pattern: |
      {
        cookie: $<!>$<HASH_CONTENT>
      }
    filters:
      - not:
          variable: HASH_CONTENT
          detection: express_insecure_cookie_domain_attribute
  - pattern: |
      {
        cookie: $<!>$<HASH_CONTENT>
      }
    filters:
      - not:
          variable: HASH_CONTENT
          detection: express_insecure_cookie_secure_attribute
languages:
  - javascript
auxiliary:
  - id: express_insecure_cookie_name_attribute
    patterns:
    - |
      { $<...>name: $<_>$<...> }
  - id: express_insecure_cookie_expiry_attribute
    patterns:
    - |
      { $<...>maxAge: $<_>$<...> }
    - |
      { $<...>expires: $<_>$<...> }
  - id: express_insecure_cookie_path_attribute
    patterns:
    - |
      { $<...>path: $<_>$<...> }
  - id: express_insecure_cookie_domain_attribute
    patterns:
    - |
      { $<...>domain: $<_>$<...> }
  - id: express_insecure_cookie_secure_attribute
    patterns:
    - |
      { $<...>secure: $<_>$<...> }
trigger: presence
severity:
  default: "low"
  PII: "critical"
  PHI: "medium"
  PD: "high"
skip_data_types:
  - "Unique Identifier"
metadata:
  description: "Missing secure options for cookie detected."
  remediation_message: |
    ## Description
    To make sure cookies don't open your application up to exploits or unauthorized access, don't use default cookie values and make sure to set security options appropriately.

    ## Remediations
    - Instead of the default cookie name, use generic names.
    - Set cookie security values to use HTTP(S) instead of client-side javascript.
    - Set `secure` values to `true` to force cookies to only send over HTTPS.

    ## Resources
    - [Express Security Best Practices](https://expressjs.com/en/advanced/best-practice-security.html#use-cookies-securely)
  cwe_id:
    - 1004
    - 614
    - 523
    - 522
  id: "express_insecure_cookie"
