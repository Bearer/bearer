patterns:
  - pattern: res.sendFile($<EXPRESS_REQ>)
    filters:
      - variable: EXPRESS_REQ
        detection: javascript_express_external_file_upload_request_obj
  - pattern: res.sendFile($<EXPRESS_REQ>, $<OPTIONS>$<...>)
    filters:
      - not:
          variable: OPTIONS
          detection: javascript_express_external_file_upload_root_option_not_request_obj
  - pattern: res.sendFile($<_>, $<EXPRESS_REQ>$<...>)
    filters:
      - variable: EXPRESS_REQ
        detection: javascript_express_external_file_upload_request_obj
languages:
  - javascript
auxiliary:
  - id: javascript_express_external_file_upload_request_obj
    patterns:
      - req.$<_>
  - id: javascript_express_external_file_upload_root_option
    patterns:
      - |
        { root: $<_> }
  - id: javascript_express_external_file_upload_root_option_not_request_obj
    patterns:
      - pattern: $<OPTIONS>
        filters:
          - variable: OPTIONS
            detection: javascript_express_external_file_upload_root_option
          - not:
              variable: OPTIONS
              detection: javascript_express_external_file_upload_request_obj
trigger: presence
metadata:
  description: "External control of filename or path detected."
  remediation_message: |
    ## Description
    Using raw unsanitized input when forming filenames or file paths is bad practice.
    It can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.

    <!--
    ## Remediations
    Coming soon.
    ## Resources
    Coming soon.
    -->
  cwe_id:
    - 73
  id: "javascript_express_external_file_upload"
