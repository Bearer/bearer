high:
    - rule:
        cwe_ids:
            - "89"
        id: javascript_aws_lambda_sql_injection
        description: SQL injection vulnerability detected.
        documentation_url: https://docs.bearer.com/reference/rules/javascript_aws_lambda_sql_injection
      line_number: 5
      filename: mysql2_sql_injection.js
      category_groups:
        - PII
      parent_line_number: 5
      snippet: connection.query("SELECT * FROM `user` WHERE name = " + event.customer.name)
    - rule:
        cwe_ids:
            - "89"
        id: javascript_aws_lambda_sql_injection
        description: SQL injection vulnerability detected.
        documentation_url: https://docs.bearer.com/reference/rules/javascript_aws_lambda_sql_injection
      line_number: 7
      filename: mysql2_sql_injection.js
      category_groups:
        - PII
      parent_line_number: 7
      snippet: asyncConn.execute("SELECT * FROM `admin_users` WHERE ID = " + event.admin.id)
    - rule:
        cwe_ids:
            - "89"
        id: javascript_aws_lambda_sql_injection
        description: SQL injection vulnerability detected.
        documentation_url: https://docs.bearer.com/reference/rules/javascript_aws_lambda_sql_injection
      line_number: 11
      filename: mysql2_sql_injection.js
      category_groups:
        - PII
      parent_line_number: 11
      snippet: |-
        pool.query("SELECT * FROM users WHERE name = " + event.user_name, function() {
            // do something
          })
    - rule:
        cwe_ids:
            - "89"
        id: javascript_aws_lambda_sql_injection
        description: SQL injection vulnerability detected.
        documentation_url: https://docs.bearer.com/reference/rules/javascript_aws_lambda_sql_injection
      line_number: 15
      filename: mysql2_sql_injection.js
      category_groups:
        - PII
      parent_line_number: 15
      snippet: |-
        conn.query("SELECT * FROM users WHERE name = " + event.user_name, function() {
              // do something
            })

