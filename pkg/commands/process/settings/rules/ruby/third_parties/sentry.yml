patterns:
  - pattern: |
      Sentry::Breadcrumb.new($<...>$<DATA_TYPE>$<...>)
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      Sentry.capture_message($<...>$<DATA_TYPE>$<...>)
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      Sentry.init do |$<CONFIG:identifier>|
        $<CONFIG>.before_breadcrumb = lambda do |$<BREADCRUMB:identifier>, $<_:identifier>|
          $<!>$<BREADCRUMB>.message = $<DATA_TYPE>
        end
      end
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      Sentry.set_context($<_>, $<...>$<DATA_TYPE>$<...>)
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      Sentry.configure_scope do |$<SCOPE:identifier>|
        $<!>$<SCOPE>.set_context($<_>, $<...>$<DATA_TYPE>$<...>)
      end
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      Sentry.with_scope do |$<SCOPE:identifier>|
        $<!>$<SCOPE>.set_context($<_>, $<...>$<DATA_TYPE>$<...>)
      end
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      Sentry.configure_scope do |$<SCOPE:identifier>|
        $<!>$<SCOPE>.set_extra($<_>, $<DATA_TYPE>)
      end
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      Sentry.with_scope do |$<SCOPE:identifier>|
        $<!>$<SCOPE>.set_extra($<_>, $<DATA_TYPE>)
      end
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      Sentry.set_extras($<...>$<DATA_TYPE>$<...>)
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      Sentry.configure_scope do |$<SCOPE:identifier>|
        $<!>$<SCOPE>.set_extras($<...>$<DATA_TYPE>$<...>)
      end
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      Sentry.with_scope do |$<SCOPE:identifier>|
        $<!>$<SCOPE>.set_extras($<...>$<DATA_TYPE>$<...>)
      end
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      Sentry.configure_scope do |$<SCOPE:identifier>|
        $<!>$<SCOPE>.set_tag($<_>, $<DATA_TYPE>)
      end
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      Sentry.with_scope do |$<SCOPE:identifier>|
        $<!>$<SCOPE>.set_tag($<_>, $<DATA_TYPE>)
      end
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      Sentry.set_tags($<...>$<DATA_TYPE>$<...>)
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      Sentry.configure_scope do |$<SCOPE:identifier>|
        $<!>$<SCOPE>.set_tags($<...>$<DATA_TYPE>$<...>)
      end
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      Sentry.with_scope do |$<SCOPE:identifier>|
        $<!>$<SCOPE>.set_tags($<...>$<DATA_TYPE>$<...>)
      end
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      Sentry.set_user($<...>$<DATA_TYPE>$<...>)
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      Sentry.configure_scope do |$<SCOPE:identifier>|
        $<!>$<SCOPE>.set_user($<...>$<DATA_TYPE>$<...>)
      end
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      Sentry.with_scope do |$<SCOPE:identifier>|
        $<!>$<SCOPE>.set_user($<...>$<DATA_TYPE>$<...>)
      end
    filters:
      - variable: DATA_TYPE
        detection: datatype
languages:
  - ruby
trigger: local
severity:
  default: low
  PII: critical
  PHI: medium
  PD: high
skip_data_types:
  - "Unique Identifier"
metadata:
  description: "Sensitive data sent to Sentry detected."
  remediation_message: |
    ## Description
    Leaking sensitive data to third-party loggers is a common cause of data leaks and can lead to data breaches. This rule looks for instances of sensitive data sent to Sentry.

    ## Remediations

    When logging errors or events, ensure all sensitive data is removed.

    ## Resources
    - [Sentry Docs](https://docs.sentry.io/)
  dsr_id: DSR-1
  cwe_id:
    - 201
  associated_recipe: Sentry
  id: ruby_third_parties_sentry
