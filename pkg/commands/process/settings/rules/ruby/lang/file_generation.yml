type: "risk"
languages:
  - ruby
patterns:
  - pattern: |
      CSV.generate { |$<CSV_FILE:identifier>| $<CSV_FILE> << $<...>$<DATA_TYPE>$<...> }
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      CSV.generate do |$<CSV_FILE:identifier>|
        $<CSV_FILE> << $<...>$<DATA_TYPE>$<...>
      end
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      CSV.open { |$<CSV_FILE:identifier>| $<CSV_FILE> << $<...>$<DATA_TYPE>$<...> }
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      File.open { |$<FILE:identifier>| $<FILE>.write $<...>$<DATA_TYPE>$<...> }
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      IO.open { |$<IO_FILE:identifier>| $<IO_FILE>.puts $<...>$<DATA_TYPE>$<...> }
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      CSV.open() do |$<CSV_FILE:identifier>|
        $<CSV_FILE> << $<...>$<DATA_TYPE>$<...>
      end
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      File.open() do |$<FILE:identifier>|
        $<FILE>.write $<...>$<DATA_TYPE>$<...>
      end
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      IO.open() do |$<IO_FILE:identifier>|
        $<IO_FILE>.puts $<...>$<DATA_TYPE>$<...>
      end
    filters:
      - variable: DATA_TYPE
        detection: datatype
trigger: "local"
severity:
  default: "low"
  PII: "critical"
  PHI: "medium"
  PD: "high"
metadata:
  description: "Do not write sensitive data to static files."
  remediation_message: |
    ## Description

    It is not uncommon to generate logs, backups, or data exports to static file formats. This rule checks if code exists to write sensitive data to static files.

    ## Remediations

    ‚ùå Avoid code like the following:

    ```ruby
    File.open("users.log", "w") { |f| f.write "#{Time.now} - User #{user.email} logged in\n" }
    File.open("users.csv", "w") do |f|
      users.each do |user|
        f.write "#{user.email},#{user.first_name},#{user.last_name}"
      end
    end
    ```

    In instances where writing sensitive data is intentional, make sure to document its location according to your internal policies.

    <!--
    ## Resources
    Coming soon.
    -->
  dsr_id: "DSR-4"
  id: "ruby_lang_file_generation"
