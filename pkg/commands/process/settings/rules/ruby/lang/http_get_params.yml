languages:
  - ruby
patterns:
  - pattern: |
      URI.encode_www_form($<DATA_TYPE>)
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      URI($<DATA_TYPE>)
    filters:
      - variable: DATA_TYPE
        detection: datatype
  - pattern: |
      $<CLIENT>.get($<...>$<DATA_TYPE>$<...>)
    filters:
      - variable: CLIENT
        values:
          - Curl
          - Excon
          - Faraday
          - HTTP
          - HTTParty
          - HTTPX
          - RestClient
          - Typhoeus
      - variable: DATA_TYPE
        detection: datatype
trigger: local
metadata:
  description: "Sensitive data communicated through GET parameters detected."
  remediation_message: |
    ## Description
    Sensitive data should never be sent as part of the query string in HTTP GET requests. This rule checks if sensitive data types are sent as GET parameters.

    ## Remediations
    Avoid sending sensitive data though HTTP GET parameters since they are passed in plain text even while using HTTPS communication:

    ❌ Avoid code like this:
    ```ruby
    HTTParty.get(
      'https://secure-api.com/user',
      {
        email: user.email
      }
    )
    ```

    ✅ Instead, use the HTTP POST method if you need to send data:

    ```ruby
    HTTParty.post(
      'https://secure-api.com/user',
      body: {
        email: user.email,
      }
    )
    ```

    ✅ Or keep using HTTP Get but avoid using sending sensitive data:

    ```ruby
    HTTParty.GET(
      'https://secure-api.com/user',
      {
        id: user.uuid
      }
    )
    ```

    <!--
    ## Resources
    Coming soon.
    -->
  cwe_id:
    - 598
  id: ruby_lang_http_get_params
