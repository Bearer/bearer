patterns:
  - pattern: |
      /$<...>#{$<USER_INPUT>}$<...>/
    filters:
      - variable: USER_INPUT
        detection: ruby_lang_regex_using_user_input_user_input
  - pattern: |
      %r{$<...>#{$<USER_INPUT>}$<...>}
    filters:
      - variable: USER_INPUT
        detection: ruby_lang_regex_using_user_input_user_input
  - pattern: |
      Regexp.$<METHOD>($<USER_INPUT>$<...>)
    filters:
      - variable: METHOD
        values:
          - new
          - compile
      - variable: USER_INPUT
        detection: ruby_lang_regex_using_user_input_user_input
auxiliary:
  - id: ruby_lang_regex_using_user_input_user_input
    patterns:
      - params
      - request
      - cookies
      - | # AWS lambda
        def $<_>($<!>event:, context:)
        end
languages:
  - ruby
metadata:
  description: "Regular expression built from user input detected."
  remediation_message: |
    ## Description

    Applications should avoid constructing regular expressions from user input.
    Regular expressions can have exponential worst-case computational
    complexity, allowing users to trigger this behaviour can result in
    excessive CPU consumption causing a regular expression denial of service (ReDoS).

    ## Remediations
    ❌ Avoid using untrusted or user data when building regular expressions

    ✅ Specify a timeout when working with regular expressions

    ```ruby
      Regexp.new(/(a|b)/, timeout: 3)
    ```

    ## Resources
    - [OWASP ReDoS attacks explained](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS)
  cwe_id:
    - 1333
  id: ruby_lang_regex_using_user_input
