high:
    - rule:
        cwe_ids:
            - "22"
        id: ruby_lang_ftp_using_user_input
        title: Do not use user input with FTP.
        description: |
            ## Description
            Using raw unsanitized input with FTP methods is bad practice.
            It could put your application at risk for code injection attacks, or lead to path traversal, by which attackers can gain access to resources outside of the intended scope


            ## Remediations
            ❌ Do not form filenames or file paths for FTP from raw user input
            ```ruby
            Net::FTP.open("public/#{params["resource_name"]}.txt" do
              # ...
            end
            ```
            ❌ Do not pass raw user input as arguments to FTP methods

            ```ruby
            Net::FTP.open("example.txt", username: params[:user]) do
              # ...
            end
            ```

            ## Resources
            - [OWASP code injection](https://owasp.org/www-community/attacks/Code_Injection)
            - [OWASP path traversal](https://owasp.org/www-community/attacks/Path_Traversal)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_ftp_using_user_input
      line_number: 1
      filename: unsafe.rb
      parent_line_number: 1
      snippet: Net::FTP.new(params[:oops])
      fingerprint: 8227f94cd757037c8b11ea06e98c47ce_0
    - rule:
        cwe_ids:
            - "22"
        id: ruby_lang_ftp_using_user_input
        title: Do not use user input with FTP.
        description: |
            ## Description
            Using raw unsanitized input with FTP methods is bad practice.
            It could put your application at risk for code injection attacks, or lead to path traversal, by which attackers can gain access to resources outside of the intended scope


            ## Remediations
            ❌ Do not form filenames or file paths for FTP from raw user input
            ```ruby
            Net::FTP.open("public/#{params["resource_name"]}.txt" do
              # ...
            end
            ```
            ❌ Do not pass raw user input as arguments to FTP methods

            ```ruby
            Net::FTP.open("example.txt", username: params[:user]) do
              # ...
            end
            ```

            ## Resources
            - [OWASP code injection](https://owasp.org/www-community/attacks/Code_Injection)
            - [OWASP path traversal](https://owasp.org/www-community/attacks/Path_Traversal)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_ftp_using_user_input
      line_number: 3
      filename: unsafe.rb
      parent_line_number: 3
      snippet: |-
        Net::FTP.open("example.com", username: params[:user]) do

        end
      fingerprint: 8227f94cd757037c8b11ea06e98c47ce_1
    - rule:
        cwe_ids:
            - "22"
        id: ruby_lang_ftp_using_user_input
        title: Do not use user input with FTP.
        description: |
            ## Description
            Using raw unsanitized input with FTP methods is bad practice.
            It could put your application at risk for code injection attacks, or lead to path traversal, by which attackers can gain access to resources outside of the intended scope


            ## Remediations
            ❌ Do not form filenames or file paths for FTP from raw user input
            ```ruby
            Net::FTP.open("public/#{params["resource_name"]}.txt" do
              # ...
            end
            ```
            ❌ Do not pass raw user input as arguments to FTP methods

            ```ruby
            Net::FTP.open("example.txt", username: params[:user]) do
              # ...
            end
            ```

            ## Resources
            - [OWASP code injection](https://owasp.org/www-community/attacks/Code_Injection)
            - [OWASP path traversal](https://owasp.org/www-community/attacks/Path_Traversal)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_ftp_using_user_input
      line_number: 9
      filename: unsafe.rb
      parent_line_number: 9
      snippet: ftp.puttextfile("local.txt", event["filename"])
      fingerprint: 8227f94cd757037c8b11ea06e98c47ce_2
low:
    - rule:
        cwe_ids:
            - "319"
        id: ruby_lang_insecure_ftp
        title: Communication with an unsecure FTP server detected.
        description: |
            ## Description

            Communication with FTP servers should be done securely over SFTP in applications that process sensitive data. This rule checks if all FTP connections are made using SFTP.

            ## Remediations

            ✅ To ensure secure FTP connections are made, [use the `Net::SFTP` library](https://github.com/net-ssh/net-sftp) instead of `Net::FTP`:

            ```ruby
            require 'net/sftp'
            Net::SFTP.start('host', 'username', password: ENV['password') do |sftp|
            	...
            end
            ```

            ## Resources
            - [net-sftp](https://github.com/net-ssh/net-sftp)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_insecure_ftp
      line_number: 1
      filename: unsafe.rb
      parent_line_number: 1
      snippet: Net::FTP.new(params[:oops])
      fingerprint: 863474a5c4ef9934b5e020504475dd02_0
    - rule:
        cwe_ids:
            - "319"
        id: ruby_lang_insecure_ftp
        title: Communication with an unsecure FTP server detected.
        description: |
            ## Description

            Communication with FTP servers should be done securely over SFTP in applications that process sensitive data. This rule checks if all FTP connections are made using SFTP.

            ## Remediations

            ✅ To ensure secure FTP connections are made, [use the `Net::SFTP` library](https://github.com/net-ssh/net-sftp) instead of `Net::FTP`:

            ```ruby
            require 'net/sftp'
            Net::SFTP.start('host', 'username', password: ENV['password') do |sftp|
            	...
            end
            ```

            ## Resources
            - [net-sftp](https://github.com/net-ssh/net-sftp)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_insecure_ftp
      line_number: 3
      filename: unsafe.rb
      parent_line_number: 3
      snippet: |-
        Net::FTP.open("example.com", username: params[:user]) do

        end
      fingerprint: 863474a5c4ef9934b5e020504475dd02_1
    - rule:
        cwe_ids:
            - "319"
        id: ruby_lang_insecure_ftp
        title: Communication with an unsecure FTP server detected.
        description: |
            ## Description

            Communication with FTP servers should be done securely over SFTP in applications that process sensitive data. This rule checks if all FTP connections are made using SFTP.

            ## Remediations

            ✅ To ensure secure FTP connections are made, [use the `Net::SFTP` library](https://github.com/net-ssh/net-sftp) instead of `Net::FTP`:

            ```ruby
            require 'net/sftp'
            Net::SFTP.start('host', 'username', password: ENV['password') do |sftp|
            	...
            end
            ```

            ## Resources
            - [net-sftp](https://github.com/net-ssh/net-sftp)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_insecure_ftp
      line_number: 8
      filename: unsafe.rb
      parent_line_number: 8
      snippet: Net::FTP.open("example.com")
      fingerprint: 863474a5c4ef9934b5e020504475dd02_2

