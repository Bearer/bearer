high:
    - rule:
        cwe_ids:
            - "532"
            - "313"
        id: ruby_lang_file_generation
        title: Sensitive data detected as part of a dynamic file generation.
        description: |
            ## Description

            It is not uncommon to generate logs, backups, or data exports to static file formats. This rule checks if code exists to write sensitive data to static files.

            ## Remediations

            ❌ Avoid code like the following:

            ```ruby
            File.open("users.log", "w") { |f| f.write "#{Time.now} - User #{user.email} logged in\n" }
            File.open("users.csv", "w") do |f|
              users.each do |user|
                f.write "#{user.email},#{user.first_name},#{user.last_name}"
              end
            end
            ```

            In instances where writing sensitive data is intentional, make sure to document its location according to your internal policies.
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_file_generation
      line_number: 5
      filename: datatype_in_csv_generate.rb
      category_groups:
        - PII
        - Personal Data
      parent_line_number: 4
      snippet: |-
        csv << [
        			user.email,
        			user.first_name,
        			user.last_name
        		]
      fingerprint: 640b1c24d7bc341c81c9abf22fabadb4_0
    - rule:
        cwe_ids:
            - "532"
            - "313"
        id: ruby_lang_file_generation
        title: Sensitive data detected as part of a dynamic file generation.
        description: |
            ## Description

            It is not uncommon to generate logs, backups, or data exports to static file formats. This rule checks if code exists to write sensitive data to static files.

            ## Remediations

            ❌ Avoid code like the following:

            ```ruby
            File.open("users.log", "w") { |f| f.write "#{Time.now} - User #{user.email} logged in\n" }
            File.open("users.csv", "w") do |f|
              users.each do |user|
                f.write "#{user.email},#{user.first_name},#{user.last_name}"
              end
            end
            ```

            In instances where writing sensitive data is intentional, make sure to document its location according to your internal policies.
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_file_generation
      line_number: 6
      filename: datatype_in_csv_generate.rb
      category_groups:
        - PII
        - Personal Data
      parent_line_number: 4
      snippet: |-
        csv << [
        			user.email,
        			user.first_name,
        			user.last_name
        		]
      fingerprint: 640b1c24d7bc341c81c9abf22fabadb4_1
    - rule:
        cwe_ids:
            - "532"
            - "313"
        id: ruby_lang_file_generation
        title: Sensitive data detected as part of a dynamic file generation.
        description: |
            ## Description

            It is not uncommon to generate logs, backups, or data exports to static file formats. This rule checks if code exists to write sensitive data to static files.

            ## Remediations

            ❌ Avoid code like the following:

            ```ruby
            File.open("users.log", "w") { |f| f.write "#{Time.now} - User #{user.email} logged in\n" }
            File.open("users.csv", "w") do |f|
              users.each do |user|
                f.write "#{user.email},#{user.first_name},#{user.last_name}"
              end
            end
            ```

            In instances where writing sensitive data is intentional, make sure to document its location according to your internal policies.
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_file_generation
      line_number: 7
      filename: datatype_in_csv_generate.rb
      category_groups:
        - PII
        - Personal Data
      parent_line_number: 4
      snippet: |-
        csv << [
        			user.email,
        			user.first_name,
        			user.last_name
        		]
      fingerprint: 640b1c24d7bc341c81c9abf22fabadb4_2

