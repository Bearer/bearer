languages:
  - ruby
patterns:
  - pattern: |
      Net::HTTP.$<METHOD>($<USER_INPUT>$<...>)
    filters:
      - variable: METHOD
        values:
          - post
          - post_form
      - variable: USER_INPUT
        detection: ruby_lang_http_url_using_user_input_user_input
  - pattern: |
      Net::HTTP.$<METHOD>($<...>$<USER_INPUT>$<...>)$<...>
    filters:
      - variable: METHOD
        values:
          - get
          - get_print
          - get_response
          - new
          - newobj
          - start
      - variable: USER_INPUT
        detection: ruby_lang_http_url_using_user_input_user_input
  - pattern: |
      Net::HTTP::$<CLASS>.new($<USER_INPUT>$<...>)
    filters:
      - variable: CLASS
        values:
          - Get
          - Head
          - Post
          - Put
          - Delete
          - Options
          - Trace
          - Patch
          - Propfind
          - Proppatch
          - Mkcol
          - Copy
          - Move
          - Lock
          - Unlock
      - variable: USER_INPUT
        detection: ruby_lang_http_url_using_user_input_user_input
  - pattern: |
      $<NET_HTTP>.$<METHOD>($<USER_INPUT>$<...>)$<...>
    filters:
      - variable: NET_HTTP
        detection: ruby_lang_http_url_using_user_input_net_http
      - variable: METHOD
        values:
          - copy
          - delete
          - get
          - get2
          - head
          - head2
          - lock
          - mkcol
          - move
          - options
          - patch
          - post
          - post2
          - propfind
          - proppatch
          - request_get
          - request_head
          - request_post
          - trace
          - unlock
      - variable: USER_INPUT
        detection: ruby_lang_http_url_using_user_input_user_input
  - pattern: |
      $<NET_HTTP>.send_request($<_>, $<USER_INPUT>$<...>)
    filters:
      - variable: NET_HTTP
        detection: ruby_lang_http_url_using_user_input_net_http
      - variable: USER_INPUT
        detection: ruby_lang_http_url_using_user_input_user_input
  - pattern: |
      $<NET_HTTP>.ipaddr = $<USER_INPUT>
    filters:
      - variable: NET_HTTP
        detection: ruby_lang_http_url_using_user_input_net_http
      - variable: USER_INPUT
        detection: ruby_lang_http_url_using_user_input_user_input
  - pattern: |
      URI($<USER_INPUT>)
    filters:
      - variable: USER_INPUT
        detection: ruby_lang_http_url_using_user_input_user_input
  - pattern: |
      Curl.http($<_>, $<USER_INPUT>$<...>)$<...>
    filters:
      - variable: USER_INPUT
        detection: ruby_lang_http_url_using_user_input_user_input
  - pattern: |
      Curl.$<METHOD>($<USER_INPUT>$<...>)$<...>
    filters:
      - variable: METHOD
        values:
          - get
          - post
          - put
          - delete
          - patch
          - head
          - options
      - variable: USER_INPUT
        detection: ruby_lang_http_url_using_user_input_user_input
  - pattern: |
      Curl::Easy.$<METHOD>($<USER_INPUT>$<...>)$<...>
    filters:
      - variable: METHOD
        values:
          - new
          - perform
          - download
          - http_delete
          - http_post
          - http_put
          - http_head
          - http_get
      - variable: USER_INPUT
        detection: ruby_lang_http_url_using_user_input_user_input
  - pattern: |
      $<CURB>.url = $<USER_INPUT>
    filters:
      - variable: CURB
        detection: ruby_lang_http_url_using_user_input_curb
      - variable: USER_INPUT
        detection: ruby_lang_http_url_using_user_input_user_input
  - pattern: |
      Curl::Multi.$<METHOD>($<USER_INPUT>$<...>)$<...>
    filters:
      - variable: METHOD
        values:
          - get
          - download
      - variable: USER_INPUT
        detection: ruby_lang_http_url_using_user_input_user_input
  - pattern: |
      Curl::Multi.$<METHOD>($<USER_INPUT_URL_HASH>$<...>)$<...>
    filters:
      - variable: METHOD
        values:
          - http
          - post
          - put
      - variable: USER_INPUT_URL_HASH
        detection: ruby_lang_http_url_using_user_input_url_hash
  - pattern: |
      Excon::Connection.new($<...>$<USER_INPUT>$<...>)
    filters:
      - variable: USER_INPUT
        detection: ruby_lang_http_url_using_user_input_user_input
  - pattern: |
      Excon.$<METHOD>($<USER_INPUT>$<...>)
    filters:
      - variable: METHOD
        values:
          - new
          - connect
          - delete
          - get
          - head
          - options
          - patch
          - post
          - put
          - trace
      - variable: USER_INPUT
        detection: ruby_lang_http_url_using_user_input_user_input
  - pattern: |
      Excon.$<METHOD>(path: $<USER_INPUT>)
    filters:
      - variable: METHOD
        values:
          - new
          - connect
          - delete
          - get
          - head
          - options
          - patch
          - post
          - put
          - trace
      - variable: USER_INPUT
        detection: ruby_lang_http_url_using_user_input_user_input
  - pattern: |
      $<EXCON>.$<METHOD>(path: $<USER_INPUT>)
    filters:
      - variable: METHOD
        values:
          - request
          - connect
          - delete
          - get
          - head
          - options
          - patch
          - post
          - put
          - trace
      - variable: EXCON
        detection: ruby_lang_http_url_using_user_input_excon
      - variable: USER_INPUT
        detection: ruby_lang_http_url_using_user_input_user_input
  - pattern: |
      $<EXCON>.requests($<USER_INPUT_PATH_HASH>)
    filters:
      - variable: EXCON
        detection: ruby_lang_http_url_using_user_input_excon
      - variable: USER_INPUT_PATH_HASH
        detection: ruby_lang_http_url_using_user_input_path_hash
  - pattern: |
      $<CLIENT>.get($<USER_INPUT>$<...>)$<...>
    filters:
      - variable: CLIENT
        values:
          - Faraday
          - HTTP
          - HTTParty
          - HTTPX
          - RestClient
          - Typhoeus
      - variable: USER_INPUT
        detection: ruby_lang_http_url_using_user_input_user_input
  - pattern: |
      $<CLIENT>.post($<USER_INPUT>$<...>)$<...>
    filters:
      - variable: CLIENT
        values:
          - Faraday
          - HTTP
          - HTTParty
          - HTTPX
          - RestClient
          - Typhoeus
      - variable: USER_INPUT
        detection: ruby_lang_http_url_using_user_input_user_input
auxiliary:
  - id: ruby_lang_http_url_using_user_input_net_http_new
    patterns:
      - |
        Net::HTTP.start($<_>$<...>) { |$<!>$<_:identifier>| }
      - pattern: |
          Net::HTTP.$<METHOD>($<_>$<...>)
        filters:
          - variable: METHOD
            values:
              - new
              - newobj
              - start
  - id: ruby_lang_http_url_using_user_input_net_http
    patterns:
      - pattern: |
          $<NET_HTTP_NEW>
        filters:
          - variable: NET_HTTP_NEW
            detection: ruby_lang_http_url_using_user_input_net_http_new
      - pattern: |
          $<NET_HTTP_NEW>.start { |$<!>$<_:identifier>| }
        filters:
          - variable: NET_HTTP_NEW
            detection: ruby_lang_http_url_using_user_input_net_http_new
      - pattern: |
          $<NET_HTTP_NEW>.start
        filters:
          - variable: NET_HTTP_NEW
            detection: ruby_lang_http_url_using_user_input_net_http_new
  - id: ruby_lang_http_url_using_user_input_curb
    patterns:
      - |
        Curl::Easy.new$<...>
  - id: ruby_lang_http_url_using_user_input_excon
    patterns:
      - |
        Excon.new$<...>
      - |
        Excon::Connection.new$<...>
  - id: ruby_lang_http_url_using_user_input_url_hash
    patterns:
      - pattern: |
          { url: $<USER_INPUT> }
        filters:
          - variable: USER_INPUT
            detection: ruby_lang_http_url_using_user_input_user_input
  - id: ruby_lang_http_url_using_user_input_path_hash
    patterns:
      - pattern: |
          { path: $<USER_INPUT> }
        filters:
          - variable: USER_INPUT
            detection: ruby_lang_http_url_using_user_input_user_input
  - id: ruby_lang_http_url_using_user_input_user_input
    patterns:
      - params
      - request
      - cookies
      - | # AWS lambda
        def $<_>($<!>event:, context:)
        end
trigger: presence
severity: high
metadata:
  description: "HTTP communication with user-controlled destination detected."
  remediation_message: |
    ## Description

    Applications should not connect to locations formed from user input.
    This rule checks for URLs containing user-supplied data.

    ## Remediations

    ❌ Avoid using user input in HTTP URLs:

    ```ruby
    Faraday.get("https://#{params[:host]}')
    ```

    ✅ Use user input indirectly to form a URL:

    ```ruby
    host =
      case params[:host]
      when "option1"
        "api1.com"
      when "option2"
        "api2.com"
      end

    Faraday.get("https://#{host}')
    ```
    <!--
    ## Resources
    Coming soon.
    -->
  cwe_id:
    - 918
  id: ruby_lang_http_url_using_user_input
