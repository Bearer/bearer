medium:
    - rule:
        cwe_ids:
            - "295"
        id: ruby_lang_ssl_verification
        title: Missing SSL certificate verification detected.
        description: |
            ## Description

            Applications processing sensitive data should use valid SSL certificates. This rule checks if SSL verification is enabled.

            ## Remediations

            ❌ By default Ruby check for SSL certificate verification but this can be bypassed when setting Open SSL verification mode to `VERIFY_NONE`:

            ```clojure
            require "net/https"
            require "uri"

            uri = URI.parse("https://ssl-site.com/")
            http = Net::HTTP.new(uri.host, uri.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE
            ```

            ✅ To ensure that SSL verification always happens, make sure to use the following mode:

            ```bash
            http.verify_mode = OpenSSL::SSL::VERIFY_PEER
            ```

            ## Resources
            - [Ruby OpenSSL module](https://ruby.github.io/openssl/OpenSSL.html)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_ssl_verification
      line_number: 1
      filename: verification_disabled.rb
      parent_line_number: 1
      snippet: http.verify_mode = OpenSSL::SSL::VERIFY_NONE
      fingerprint: 77a022ac94d4ef9a428dc47d4e8d3b7c_0
    - rule:
        cwe_ids:
            - "295"
        id: ruby_lang_ssl_verification
        title: Missing SSL certificate verification detected.
        description: |
            ## Description

            Applications processing sensitive data should use valid SSL certificates. This rule checks if SSL verification is enabled.

            ## Remediations

            ❌ By default Ruby check for SSL certificate verification but this can be bypassed when setting Open SSL verification mode to `VERIFY_NONE`:

            ```clojure
            require "net/https"
            require "uri"

            uri = URI.parse("https://ssl-site.com/")
            http = Net::HTTP.new(uri.host, uri.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE
            ```

            ✅ To ensure that SSL verification always happens, make sure to use the following mode:

            ```bash
            http.verify_mode = OpenSSL::SSL::VERIFY_PEER
            ```

            ## Resources
            - [Ruby OpenSSL module](https://ruby.github.io/openssl/OpenSSL.html)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_ssl_verification
      line_number: 4
      filename: verification_disabled.rb
      parent_line_number: 4
      snippet: |-
        Net::HTTP.start(uri.host, uri.port, :use_ssl => true, :verify_mode => OpenSSL::SSL::VERIFY_NONE) do |http|
          Net::HTTP::Get.new uri
        end
      fingerprint: 77a022ac94d4ef9a428dc47d4e8d3b7c_1

