high:
    - rule:
        cwe_ids:
            - "918"
        id: ruby_lang_http_url_using_user_input
        title: HTTP communication with user-controlled destination detected.
        description: |
            ## Description

            Applications should not connect to locations formed from user input.
            This rule checks for URLs containing user-supplied data.

            ## Remediations

            ❌ Avoid using user input in HTTP URLs:

            ```ruby
            Faraday.get("https://#{params[:host]}')
            ```

            ✅ Use user input indirectly to form a URL:

            ```ruby
            host =
              case params[:host]
              when "option1"
                "api1.com"
              when "option2"
                "api2.com"
              end

            Faraday.get("https://#{host}')
            ```
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_http_url_using_user_input
      line_number: 3
      filename: unsafe_net_http.rb
      parent_line_number: 3
      snippet: Net::HTTP.post_form("http://#{params[:oops]}/users/search")
      fingerprint: d7e95ef774e486e9ed6deb86c1f22c5e_0
    - rule:
        cwe_ids:
            - "918"
        id: ruby_lang_http_url_using_user_input
        title: HTTP communication with user-controlled destination detected.
        description: |
            ## Description

            Applications should not connect to locations formed from user input.
            This rule checks for URLs containing user-supplied data.

            ## Remediations

            ❌ Avoid using user input in HTTP URLs:

            ```ruby
            Faraday.get("https://#{params[:host]}')
            ```

            ✅ Use user input indirectly to form a URL:

            ```ruby
            host =
              case params[:host]
              when "option1"
                "api1.com"
              when "option2"
                "api2.com"
              end

            Faraday.get("https://#{host}')
            ```
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_http_url_using_user_input
      line_number: 5
      filename: unsafe_net_http.rb
      parent_line_number: 5
      snippet: |-
        Net::HTTP.start(params[:host]) do |instance1|
          instance1.head(params[:path])
        end
      fingerprint: d7e95ef774e486e9ed6deb86c1f22c5e_1
    - rule:
        cwe_ids:
            - "918"
        id: ruby_lang_http_url_using_user_input
        title: HTTP communication with user-controlled destination detected.
        description: |
            ## Description

            Applications should not connect to locations formed from user input.
            This rule checks for URLs containing user-supplied data.

            ## Remediations

            ❌ Avoid using user input in HTTP URLs:

            ```ruby
            Faraday.get("https://#{params[:host]}')
            ```

            ✅ Use user input indirectly to form a URL:

            ```ruby
            host =
              case params[:host]
              when "option1"
                "api1.com"
              when "option2"
                "api2.com"
              end

            Faraday.get("https://#{host}')
            ```
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_http_url_using_user_input
      line_number: 6
      filename: unsafe_net_http.rb
      parent_line_number: 6
      snippet: instance1.head(params[:path])
      fingerprint: d7e95ef774e486e9ed6deb86c1f22c5e_2
    - rule:
        cwe_ids:
            - "918"
        id: ruby_lang_http_url_using_user_input
        title: HTTP communication with user-controlled destination detected.
        description: |
            ## Description

            Applications should not connect to locations formed from user input.
            This rule checks for URLs containing user-supplied data.

            ## Remediations

            ❌ Avoid using user input in HTTP URLs:

            ```ruby
            Faraday.get("https://#{params[:host]}')
            ```

            ✅ Use user input indirectly to form a URL:

            ```ruby
            host =
              case params[:host]
              when "option1"
                "api1.com"
              when "option2"
                "api2.com"
              end

            Faraday.get("https://#{host}')
            ```
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_http_url_using_user_input
      line_number: 9
      filename: unsafe_net_http.rb
      parent_line_number: 9
      snippet: 'Net::HTTP::Get.new(params[:oops], { "X-Test": 42 })'
      fingerprint: d7e95ef774e486e9ed6deb86c1f22c5e_3
    - rule:
        cwe_ids:
            - "918"
        id: ruby_lang_http_url_using_user_input
        title: HTTP communication with user-controlled destination detected.
        description: |
            ## Description

            Applications should not connect to locations formed from user input.
            This rule checks for URLs containing user-supplied data.

            ## Remediations

            ❌ Avoid using user input in HTTP URLs:

            ```ruby
            Faraday.get("https://#{params[:host]}')
            ```

            ✅ Use user input indirectly to form a URL:

            ```ruby
            host =
              case params[:host]
              when "option1"
                "api1.com"
              when "option2"
                "api2.com"
              end

            Faraday.get("https://#{host}')
            ```
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_http_url_using_user_input
      line_number: 11
      filename: unsafe_net_http.rb
      parent_line_number: 11
      snippet: Net::HTTP.start(params[:oops])
      fingerprint: d7e95ef774e486e9ed6deb86c1f22c5e_4
    - rule:
        cwe_ids:
            - "918"
        id: ruby_lang_http_url_using_user_input
        title: HTTP communication with user-controlled destination detected.
        description: |
            ## Description

            Applications should not connect to locations formed from user input.
            This rule checks for URLs containing user-supplied data.

            ## Remediations

            ❌ Avoid using user input in HTTP URLs:

            ```ruby
            Faraday.get("https://#{params[:host]}')
            ```

            ✅ Use user input indirectly to form a URL:

            ```ruby
            host =
              case params[:host]
              when "option1"
                "api1.com"
              when "option2"
                "api2.com"
              end

            Faraday.get("https://#{host}')
            ```
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_http_url_using_user_input
      line_number: 12
      filename: unsafe_net_http.rb
      parent_line_number: 12
      snippet: instance2.ipaddr = request.env[:oops]
      fingerprint: d7e95ef774e486e9ed6deb86c1f22c5e_5
    - rule:
        cwe_ids:
            - "918"
        id: ruby_lang_http_url_using_user_input
        title: HTTP communication with user-controlled destination detected.
        description: |
            ## Description

            Applications should not connect to locations formed from user input.
            This rule checks for URLs containing user-supplied data.

            ## Remediations

            ❌ Avoid using user input in HTTP URLs:

            ```ruby
            Faraday.get("https://#{params[:host]}')
            ```

            ✅ Use user input indirectly to form a URL:

            ```ruby
            host =
              case params[:host]
              when "option1"
                "api1.com"
              when "option2"
                "api2.com"
              end

            Faraday.get("https://#{host}')
            ```
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_http_url_using_user_input
      line_number: 13
      filename: unsafe_net_http.rb
      parent_line_number: 13
      snippet: instance2.send_request("GET", params[:oops], nil)
      fingerprint: d7e95ef774e486e9ed6deb86c1f22c5e_6
    - rule:
        cwe_ids:
            - "918"
        id: ruby_lang_http_url_using_user_input
        title: HTTP communication with user-controlled destination detected.
        description: |
            ## Description

            Applications should not connect to locations formed from user input.
            This rule checks for URLs containing user-supplied data.

            ## Remediations

            ❌ Avoid using user input in HTTP URLs:

            ```ruby
            Faraday.get("https://#{params[:host]}')
            ```

            ✅ Use user input indirectly to form a URL:

            ```ruby
            host =
              case params[:host]
              when "option1"
                "api1.com"
              when "option2"
                "api2.com"
              end

            Faraday.get("https://#{host}')
            ```
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_http_url_using_user_input
      line_number: 15
      filename: unsafe_net_http.rb
      parent_line_number: 15
      snippet: Net::HTTP.new(params[:oops])
      fingerprint: d7e95ef774e486e9ed6deb86c1f22c5e_7
    - rule:
        cwe_ids:
            - "918"
        id: ruby_lang_http_url_using_user_input
        title: HTTP communication with user-controlled destination detected.
        description: |
            ## Description

            Applications should not connect to locations formed from user input.
            This rule checks for URLs containing user-supplied data.

            ## Remediations

            ❌ Avoid using user input in HTTP URLs:

            ```ruby
            Faraday.get("https://#{params[:host]}')
            ```

            ✅ Use user input indirectly to form a URL:

            ```ruby
            host =
              case params[:host]
              when "option1"
                "api1.com"
              when "option2"
                "api2.com"
              end

            Faraday.get("https://#{host}')
            ```
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_http_url_using_user_input
      line_number: 16
      filename: unsafe_net_http.rb
      parent_line_number: 16
      snippet: instance3.patch(params[:path])
      fingerprint: d7e95ef774e486e9ed6deb86c1f22c5e_8
    - rule:
        cwe_ids:
            - "918"
        id: ruby_lang_http_url_using_user_input
        title: HTTP communication with user-controlled destination detected.
        description: |
            ## Description

            Applications should not connect to locations formed from user input.
            This rule checks for URLs containing user-supplied data.

            ## Remediations

            ❌ Avoid using user input in HTTP URLs:

            ```ruby
            Faraday.get("https://#{params[:host]}')
            ```

            ✅ Use user input indirectly to form a URL:

            ```ruby
            host =
              case params[:host]
              when "option1"
                "api1.com"
              when "option2"
                "api2.com"
              end

            Faraday.get("https://#{host}')
            ```
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_http_url_using_user_input
      line_number: 18
      filename: unsafe_net_http.rb
      parent_line_number: 18
      snippet: instance4.post(request.env[:oops])
      fingerprint: d7e95ef774e486e9ed6deb86c1f22c5e_9
low:
    - rule:
        cwe_ids:
            - "319"
        id: ruby_lang_http_insecure
        title: Connection through an unsecure HTTP communication detected.
        description: |
            ## Description

            Applications should only connect to API using HTTPS connections. This rule checks that all HTTP connections use HTTPS.

            ## Remediations

            ❌ Avoid using unsecured outgoing HTTP communication, especially in the context of API calls:

            ```ruby
            response = HTTParty.get('http://insecure-api.com')
            ```

            ✅ Ensure to always connect though HTTPS:

            ```ruby
            response = HTTParty.get('https://secure-api.com')
            ```

            ## Resources
            - [OWASP insecure transport](https://owasp.org/www-community/vulnerabilities/Insecure_Transport)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_http_insecure
      line_number: 3
      filename: unsafe_net_http.rb
      parent_line_number: 3
      snippet: Net::HTTP.post_form("http://#{params[:oops]}/users/search")
      fingerprint: 71635572f6c2736df1473f18c62a4464_0

