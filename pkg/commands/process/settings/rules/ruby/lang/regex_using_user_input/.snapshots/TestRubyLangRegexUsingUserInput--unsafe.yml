low:
    - rule:
        cwe_ids:
            - "1333"
        id: ruby_lang_regex_using_user_input
        title: Regular expression built from user input detected.
        description: |
            ## Description

            Applications should avoid constructing regular expressions from user input.
            Regular expressions can have exponential worst-case computational
            complexity, allowing users to trigger this behaviour can result in
            excessive CPU consumption causing a regular expression denial of service (ReDoS).

            ## Remediations
            ❌ Avoid using untrusted or user data when building regular expressions

            ✅ Specify a timeout when working with regular expressions

            ```ruby
              Regexp.new(/(a|b)/, timeout: 3)
            ```

            ## Resources
            - [OWASP ReDoS attacks explained](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_regex_using_user_input
      line_number: 1
      filename: unsafe.rb
      parent_line_number: 1
      snippet: /#{params[:oops]}.*/
      fingerprint: 1e8ee47f5cc7f8e0addb596acc3642ab_0
    - rule:
        cwe_ids:
            - "1333"
        id: ruby_lang_regex_using_user_input
        title: Regular expression built from user input detected.
        description: |
            ## Description

            Applications should avoid constructing regular expressions from user input.
            Regular expressions can have exponential worst-case computational
            complexity, allowing users to trigger this behaviour can result in
            excessive CPU consumption causing a regular expression denial of service (ReDoS).

            ## Remediations
            ❌ Avoid using untrusted or user data when building regular expressions

            ✅ Specify a timeout when working with regular expressions

            ```ruby
              Regexp.new(/(a|b)/, timeout: 3)
            ```

            ## Resources
            - [OWASP ReDoS attacks explained](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_regex_using_user_input
      line_number: 3
      filename: unsafe.rb
      parent_line_number: 3
      snippet: '%r{abc#{params[:oops]}def}'
      fingerprint: 1e8ee47f5cc7f8e0addb596acc3642ab_1
    - rule:
        cwe_ids:
            - "1333"
        id: ruby_lang_regex_using_user_input
        title: Regular expression built from user input detected.
        description: |
            ## Description

            Applications should avoid constructing regular expressions from user input.
            Regular expressions can have exponential worst-case computational
            complexity, allowing users to trigger this behaviour can result in
            excessive CPU consumption causing a regular expression denial of service (ReDoS).

            ## Remediations
            ❌ Avoid using untrusted or user data when building regular expressions

            ✅ Specify a timeout when working with regular expressions

            ```ruby
              Regexp.new(/(a|b)/, timeout: 3)
            ```

            ## Resources
            - [OWASP ReDoS attacks explained](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_regex_using_user_input
      line_number: 5
      filename: unsafe.rb
      parent_line_number: 5
      snippet: Regexp.new(params[:oops])
      fingerprint: 1e8ee47f5cc7f8e0addb596acc3642ab_2

