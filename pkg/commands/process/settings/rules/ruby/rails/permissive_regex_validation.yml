languages:
  - ruby
patterns:
  - pattern: |
      validates format: { with: $<REGEX> }
    filters:
      - variable: REGEX
        regex: \A([/'"]|%r.).*.\z
      - not:
          variable: REGEX
          regex: \A([/'"]|%r.)\\A.*\\[zZ].\z
  - pattern: |
      validates_format_of with: $<REGEX>
    filters:
      - variable: REGEX
        regex: \A([/'"]|%r.).*.\z
      - not:
          variable: REGEX
          regex: \A([/'"]|%r.)\\A.*\\[zZ].\z
trigger: presence
metadata:
  description: "Validation using permissive regular expression detected."
  remediation_message: |
    ## Description

    Validations using regular expressions should use the start of text (\A) and
    end of text (\z or \Z) boundaries.

    ## Remediations

    ❌ Avoid matching without start and end boundaries:

    ```ruby
    validates :attribute, format: { with: /foo/}
    ```

    ❌ Avoid using line-based boundaries:

    ```ruby
    validates :attribute, format: { with: /^foo$/}
    ```

    ✅ Use whole-text boundaries:

    ```ruby
    validates :attribute1, format: { with: "\Afoo\Z"}
    validates :attribute2, format: { with: "\Afoo\z"}
    ```
    <!--
    ## Resources
    Coming soon.
    -->
  cwe_id:
    - 625
  id: ruby_rails_permissive_regex_validation
