languages:
  - ruby
patterns:
  - pattern: |
      class $<_>
        $<!>validates :password, length: { minimum: $<LENGTH> }
      end
    filters:
      - variable: LENGTH
        less_than: 8
  - pattern: |
      class $<_>
        $<!>devise password_length: $<MIN_LENGTH>..$<MAX_LENGTH>
      end
    filters:
      - either:
          - variable: MAX_LENGTH
            less_than: 35
          - variable: MIN_LENGTH
            less_than: 8
  - pattern: |
      Devise.setup do |$<CONFIG:identifier>|
        $<CONFIG>.password_length = $<MIN_LENGTH>..$<MAX_LENGTH>
      end
    filters:
      - variable: MIN_LENGTH
        less_than: 8
  - pattern: |
      Devise.setup do |$<CONFIG:identifier>|
        $<CONFIG>.password_length = $<LENGTH>
      end
    filters:
      - variable: LENGTH
        less_than: 8
        match_violation: true
trigger: global
severity: high
metadata:
  description: "Password length (< 8) requirement is too short."
  remediation_message: |
    ## Description

    Minimum password length should be enforced any time password creation occurs. This rule checks if configurations and validations made for passwords include a minimum length of 8.

    ## Remediations

    âœ… OWASP recommends a password length of at least 8 characters, which is easy to enforce at the model level in Rails using validation constraint:

    ```ruby
    validates :password, presence: true, length: { minimum: 8, maximum: 255 }
    ```

    <!--
    ## Resources
    Coming soon.
    -->
  cwe_id:
    - 521
  id: ruby_rails_password_length
