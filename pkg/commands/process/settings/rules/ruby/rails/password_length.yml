type: "risk"
languages:
  - ruby
patterns:
  - pattern: |
      class $<_:constant>
        validates :password, length: { minimum: $<LENGTH> }
      end
    filters:
      - variable: LENGTH
        less_than: 8
  - pattern: |
      class $<_>
        devise password_length: $<MIN_LENGTH>..$<MAX_LENGTH>
      end
    filters:
      - either:
          - variable: MAX_LENGTH
            less_than: 35
          - variable: MIN_LENGTH
            less_than: 8
  - pattern: |
      Devise.setup do |$<CONFIG:identifier>|
        $<CONFIG>.password_length = $<MIN_LENGTH>..$<MAX_LENGTH>
      end
    filters:
      - variable: MIN_LENGTH
        less_than: 8
  - pattern: |
      Devise.setup do |$<CONFIG:identifier>|
        $<CONFIG>.password_length = $<LENGTH>
      end
    filters:
      - variable: LENGTH
        less_than: 8
        match_violation: true
detect_presence: true
trigger: "global"
severity:
  default: "high"
metadata:
  failure_message: "failure message DSW-007"
  description: "description DSW-007"
  remediation_message: "remediation message DSW-007"
  dsw_id: "DSW-007"
