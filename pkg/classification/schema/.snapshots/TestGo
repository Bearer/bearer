([]testhelper.ClassificationResult) (len=33) {
  (testhelper.ClassificationResult) {
    Name: (string) (len=19) "walletServiceClient",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=34) "valid_object_with_valid_properties"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=18) {
      (string) (len=20) "AccountNotifications": (testhelper.ClassificationResult) {
        Name: (string) (len=20) "AccountNotifications",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=13) "AccountNumber": (testhelper.ClassificationResult) {
        Name: (string) (len=13) "AccountNumber",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "Accounts": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "Accounts",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=7) "Balance": (testhelper.ClassificationResult) {
        Name: (string) (len=7) "Balance",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=16) "ChangePassphrase": (testhelper.ClassificationResult) {
        Name: (string) (len=16) "ChangePassphrase",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=15) "FundTransaction": (testhelper.ClassificationResult) {
        Name: (string) (len=15) "FundTransaction",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=15) "GetTransactions": (testhelper.ClassificationResult) {
        Name: (string) (len=15) "GetTransactions",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=16) "ImportPrivateKey": (testhelper.ClassificationResult) {
        Name: (string) (len=16) "ImportPrivateKey",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=7) "Network": (testhelper.ClassificationResult) {
        Name: (string) (len=7) "Network",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=11) "NextAccount": (testhelper.ClassificationResult) {
        Name: (string) (len=11) "NextAccount",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=11) "NextAddress": (testhelper.ClassificationResult) {
        Name: (string) (len=11) "NextAddress",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=4) "Ping": (testhelper.ClassificationResult) {
        Name: (string) (len=4) "Ping",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=18) "PublishTransaction": (testhelper.ClassificationResult) {
        Name: (string) (len=18) "PublishTransaction",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=13) "RenameAccount": (testhelper.ClassificationResult) {
        Name: (string) (len=13) "RenameAccount",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=15) "SignTransaction": (testhelper.ClassificationResult) {
        Name: (string) (len=15) "SignTransaction",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=22) "SpentnessNotifications": (testhelper.ClassificationResult) {
        Name: (string) (len=22) "SpentnessNotifications",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=24) "TransactionNotifications": (testhelper.ClassificationResult) {
        Name: (string) (len=24) "TransactionNotifications",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=2) "cc": (testhelper.ClassificationResult) {
        Name: (string) (len=2) "cc",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=12) "walletServer",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=36) "invalid_object_with_valid_properties"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=18) {
      (string) (len=20) "AccountNotifications": (testhelper.ClassificationResult) {
        Name: (string) (len=20) "AccountNotifications",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "Accounts": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "Accounts",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=7) "Balance": (testhelper.ClassificationResult) {
        Name: (string) (len=7) "Balance",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=17) "BankAccountNumber": (testhelper.ClassificationResult) {
        Name: (string) (len=17) "BankAccountNumber",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=21) "valid_unknown_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=16) "ChangePassphrase": (testhelper.ClassificationResult) {
        Name: (string) (len=16) "ChangePassphrase",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=13) "CreditRecords": (testhelper.ClassificationResult) {
        Name: (string) (len=13) "CreditRecords",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=21) "valid_unknown_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=15) "FundTransaction": (testhelper.ClassificationResult) {
        Name: (string) (len=15) "FundTransaction",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=15) "GetTransactions": (testhelper.ClassificationResult) {
        Name: (string) (len=15) "GetTransactions",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=7) "Network": (testhelper.ClassificationResult) {
        Name: (string) (len=7) "Network",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=11) "NextAccount": (testhelper.ClassificationResult) {
        Name: (string) (len=11) "NextAccount",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=11) "NextAddress": (testhelper.ClassificationResult) {
        Name: (string) (len=11) "NextAddress",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=22) "valid_extended_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=20) "PaymentAccountNumber": (testhelper.ClassificationResult) {
        Name: (string) (len=20) "PaymentAccountNumber",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=22) "valid_extended_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=4) "Ping": (testhelper.ClassificationResult) {
        Name: (string) (len=4) "Ping",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=18) "PublishTransaction": (testhelper.ClassificationResult) {
        Name: (string) (len=18) "PublishTransaction",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=15) "SignTransaction": (testhelper.ClassificationResult) {
        Name: (string) (len=15) "SignTransaction",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=22) "SpentnessNotifications": (testhelper.ClassificationResult) {
        Name: (string) (len=22) "SpentnessNotifications",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=24) "TransactionNotifications": (testhelper.ClassificationResult) {
        Name: (string) (len=24) "TransactionNotifications",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=6) "wallet": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "wallet",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=4) "user",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=34) "valid_object_with_valid_properties"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=10) {
      (string) (len=9) "FirstName": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "FirstName",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "LastName": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "LastName",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "Photo": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "Photo",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=6) "UserId": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "UserId",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=25) "known_database_identifier"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "Username": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "Username",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "dislikes": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "dislikes",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=3) "dob": (testhelper.ClassificationResult) {
        Name: (string) (len=3) "dob",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "likes": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "likes",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=4) "name": (testhelper.ClassificationResult) {
        Name: (string) (len=4) "name",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=12) "palceOfBirth": (testhelper.ClassificationResult) {
        Name: (string) (len=12) "palceOfBirth",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=6) "walker",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=36) "invalid_object_with_valid_properties"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=34) {
      (string) (len=8) "WalkFrom": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "WalkFrom",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=11) "addChildren": (testhelper.ClassificationResult) {
        Name: (string) (len=11) "addChildren",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "authorised": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "authorised",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=16) "authorisedServer": (testhelper.ClassificationResult) {
        Name: (string) (len=16) "authorisedServer",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=14) "authorisedUser": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "authorisedUser",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "cache": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "cache",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "callLogs": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "callLogs",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=21) "valid_unknown_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=6) "caller": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "caller",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=15) "childReferences": (testhelper.ClassificationResult) {
        Name: (string) (len=15) "childReferences",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=17) "childrenForParent": (testhelper.ClassificationResult) {
        Name: (string) (len=17) "childrenForParent",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=3) "ctx": (testhelper.ClassificationResult) {
        Name: (string) (len=3) "ctx",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=2) "db": (testhelper.ClassificationResult) {
        Name: (string) (len=2) "db",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=17) "federatedRoomInfo": (testhelper.ClassificationResult) {
        Name: (string) (len=17) "federatedRoomInfo",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=2) "fn": (testhelper.ClassificationResult) {
        Name: (string) (len=2) "fn",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "fsAPI": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "fsAPI",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "limit": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "limit",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=19) "loadPaginationCache": (testhelper.ClassificationResult) {
        Name: (string) (len=19) "loadPaginationCache",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "maxDepth": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "maxDepth",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=2) "mu": (testhelper.ClassificationResult) {
        Name: (string) (len=2) "mu",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=18) "newPaginationCache": (testhelper.ClassificationResult) {
        Name: (string) (len=18) "newPaginationCache",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=9) "nextChild": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "nextChild",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=15) "paginationCache": (testhelper.ClassificationResult) {
        Name: (string) (len=15) "paginationCache",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=15) "paginationToken": (testhelper.ClassificationResult) {
        Name: (string) (len=15) "paginationToken",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=16) "publicRoomsChunk": (testhelper.ClassificationResult) {
        Name: (string) (len=16) "publicRoomsChunk",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=3) "req": (testhelper.ClassificationResult) {
        Name: (string) (len=3) "req",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=30) "restrictedJoinRuleAllowedRooms": (testhelper.ClassificationResult) {
        Name: (string) (len=30) "restrictedJoinRuleAllowedRooms",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "roomExists": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "roomExists",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "rootRoomID": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "rootRoomID",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "serverName": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "serverName",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "stateEvent": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "stateEvent",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=20) "storePaginationCache": (testhelper.ClassificationResult) {
        Name: (string) (len=20) "storePaginationCache",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=13) "suggestedOnly": (testhelper.ClassificationResult) {
        Name: (string) (len=13) "suggestedOnly",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "thisServer": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "thisServer",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=4) "walk": (testhelper.ClassificationResult) {
        Name: (string) (len=4) "walk",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=10) "userClaims",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=34) "valid_object_with_valid_properties"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=6) {
      (string) (len=13) "EmailVerified": (testhelper.ClassificationResult) {
        Name: (string) (len=13) "EmailVerified",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=6) "Family": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "Family",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "FamilyName": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "FamilyName",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=9) "GivenName": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "GivenName",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=7) "Picture": (testhelper.ClassificationResult) {
        Name: (string) (len=7) "Picture",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=17) "PreferredUsername": (testhelper.ClassificationResult) {
        Name: (string) (len=17) "PreferredUsername",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=12) "userFavorite",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=34) "valid_object_with_valid_properties"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=2) {
      (string) (len=12) "FavoriteFood": (testhelper.ClassificationResult) {
        Name: (string) (len=12) "FavoriteFood",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=6) "UserID": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "UserID",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=25) "known_database_identifier"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=32) "validateOpUpdateFindingsFeedback",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=17) "known_data_object"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=2) {
      (string) (len=16) "HandleInitialize": (testhelper.ClassificationResult) {
        Name: (string) (len=16) "HandleInitialize",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=6) "UserID": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "UserID",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=25) "known_database_identifier"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=11) "twitterUser",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=34) "valid_object_with_valid_properties"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=42) {
      (string) (len=6) "Accent": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "Accent",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=19) "ContributorsEnabled": (testhelper.ClassificationResult) {
        Name: (string) (len=19) "ContributorsEnabled",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=9) "CreatedAt": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "CreatedAt",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=14) "DefaultProfile": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "DefaultProfile",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=19) "DefaultProfileImage": (testhelper.ClassificationResult) {
        Name: (string) (len=19) "DefaultProfileImage",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=11) "Description": (testhelper.ClassificationResult) {
        Name: (string) (len=11) "Description",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "Entities": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "Entities",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=15) "FavouritesCount": (testhelper.ClassificationResult) {
        Name: (string) (len=15) "FavouritesCount",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=17) "FollowRequestSent": (testhelper.ClassificationResult) {
        Name: (string) (len=17) "FollowRequestSent",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=14) "FollowersCount": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "FollowersCount",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=9) "Following": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "Following",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=12) "FriendsCount": (testhelper.ClassificationResult) {
        Name: (string) (len=12) "FriendsCount",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=14) "GenderIdentity": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "GenderIdentity",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "GeoEnabled": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "GeoEnabled",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=20) "IsTranslationEnabled": (testhelper.ClassificationResult) {
        Name: (string) (len=20) "IsTranslationEnabled",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=12) "IsTranslator": (testhelper.ClassificationResult) {
        Name: (string) (len=12) "IsTranslator",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=4) "Lang": (testhelper.ClassificationResult) {
        Name: (string) (len=4) "Lang",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=11) "ListedCount": (testhelper.ClassificationResult) {
        Name: (string) (len=11) "ListedCount",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "Location": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "Location",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=9) "Longitude": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "Longitude",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "Membership": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "Membership",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=4) "Name": (testhelper.ClassificationResult) {
        Name: (string) (len=4) "Name",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=13) "Notifications": (testhelper.ClassificationResult) {
        Name: (string) (len=13) "Notifications",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=22) "ProfileBackgroundColor": (testhelper.ClassificationResult) {
        Name: (string) (len=22) "ProfileBackgroundColor",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=25) "ProfileBackgroundImageURL": (testhelper.ClassificationResult) {
        Name: (string) (len=25) "ProfileBackgroundImageURL",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=30) "ProfileBackgroundImageURLHTTPS": (testhelper.ClassificationResult) {
        Name: (string) (len=30) "ProfileBackgroundImageURLHTTPS",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=21) "ProfileBackgroundTile": (testhelper.ClassificationResult) {
        Name: (string) (len=21) "ProfileBackgroundTile",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=16) "ProfileBannerURL": (testhelper.ClassificationResult) {
        Name: (string) (len=16) "ProfileBannerURL",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=15) "ProfileImageURL": (testhelper.ClassificationResult) {
        Name: (string) (len=15) "ProfileImageURL",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=20) "ProfileImageURLHTTPS": (testhelper.ClassificationResult) {
        Name: (string) (len=20) "ProfileImageURLHTTPS",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=16) "ProfileLinkColor": (testhelper.ClassificationResult) {
        Name: (string) (len=16) "ProfileLinkColor",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=25) "ProfileSidebarBorderColor": (testhelper.ClassificationResult) {
        Name: (string) (len=25) "ProfileSidebarBorderColor",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=16) "ProfileTextColor": (testhelper.ClassificationResult) {
        Name: (string) (len=16) "ProfileTextColor",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=25) "ProfileUseBackgroundImage": (testhelper.ClassificationResult) {
        Name: (string) (len=25) "ProfileUseBackgroundImage",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "Reputation": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "Reputation",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "ScreenName": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "ScreenName",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=12) "SocialStatus": (testhelper.ClassificationResult) {
        Name: (string) (len=12) "SocialStatus",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=14) "TranslatorType": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "TranslatorType",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=3) "URL": (testhelper.ClassificationResult) {
        Name: (string) (len=3) "URL",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=6) "UserID": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "UserID",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=25) "known_database_identifier"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=9) "UserIDStr": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "UserIDStr",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "Verified": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "Verified",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=10) "topoResult",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=36) "invalid_object_with_valid_properties"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=5) {
      (string) (len=8) "AllNodes": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "AllNodes",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "IDNum": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "IDNum",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=21) "valid_unknown_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=7) "IsExist": (testhelper.ClassificationResult) {
        Name: (string) (len=7) "IsExist",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "Route": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "Route",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=4) "UUID": (testhelper.ClassificationResult) {
        Name: (string) (len=4) "UUID",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=14) "Identification",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=17) "known_data_object"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=2) {
      (string) (len=15) "CreateUserStore": (testhelper.ClassificationResult) {
        Name: (string) (len=15) "CreateUserStore",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=6) "UserId": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "UserId",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=25) "known_database_identifier"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=19) "verificationRequest",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=36) "invalid_object_with_valid_properties"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=7) {
      (string) (len=5) "Email": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "Email",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=21) "valid_unknown_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "Intentions": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "Intentions",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=22) "valid_extended_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=12) "Interactions": (testhelper.ClassificationResult) {
        Name: (string) (len=12) "Interactions",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=22) "valid_extended_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "Password": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "Password",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=22) "valid_extended_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=9) "Recaptcha": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "Recaptcha",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=13) "SessionSecret": (testhelper.ClassificationResult) {
        Name: (string) (len=13) "SessionSecret",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "Username": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "Username",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=21) "valid_unknown_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=9) "vulncheck",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=36) "invalid_object_with_valid_properties"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=7) {
      (string) (len=12) "DetailedHelp": (testhelper.ClassificationResult) {
        Name: (string) (len=12) "DetailedHelp",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=9) "Interview": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "Interview",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=21) "valid_unknown_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=4) "Name": (testhelper.ClassificationResult) {
        Name: (string) (len=4) "Name",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=22) "valid_extended_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=6) "Parent": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "Parent",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=3) "Run": (testhelper.ClassificationResult) {
        Name: (string) (len=3) "Run",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=9) "ShortHelp": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "ShortHelp",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=3) "app": (testhelper.ClassificationResult) {
        Name: (string) (len=3) "app",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=23) "validateOpUntagResource",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=36) "invalid_object_with_valid_properties"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=3) {
      (string) (len=14) "ClicksTracking": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "ClicksTracking",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=21) "valid_unknown_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=16) "HandleInitialize": (testhelper.ClassificationResult) {
        Name: (string) (len=16) "HandleInitialize",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=2) "ID": (testhelper.ClassificationResult) {
        Name: (string) (len=2) "ID",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=10) "vrfMessage",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=17) "known_data_object"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=5) {
      (string) (len=6) "Beacon": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "Beacon",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=7) "Counter": (testhelper.ClassificationResult) {
        Name: (string) (len=7) "Counter",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "Epoch": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "Epoch",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "Layer": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "Layer",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "ReceiverId": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "ReceiverId",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=25) "known_database_identifier"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=9) "updateReq",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=36) "invalid_object_with_valid_properties"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=6) {
      (string) (len=9) "FirstName": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "FirstName",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=21) "valid_unknown_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=2) "ID": (testhelper.ClassificationResult) {
        Name: (string) (len=2) "ID",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "LastName": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "LastName",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=21) "valid_unknown_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=6) "Mobile": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "Mobile",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=22) "valid_extended_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=14) "NationalOrigin": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "NationalOrigin",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=21) "valid_unknown_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=4) "Race": (testhelper.ClassificationResult) {
        Name: (string) (len=4) "Race",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=22) "valid_extended_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=33) "validateOpGetBucketRequestPayment",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=7) "invalid",
      Reason: (string) (len=19) "unknown_data_object"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=2) {
      (string) (len=16) "HandleInitialize": (testhelper.ClassificationResult) {
        Name: (string) (len=16) "HandleInitialize",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=7) "PayeeID": (testhelper.ClassificationResult) {
        Name: (string) (len=7) "PayeeID",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=25) "known_database_identifier"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=13) "reviewRequest",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=17) "known_data_object"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=2) {
      (string) (len=9) "profileId": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "profileId",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=25) "known_database_identifier"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=17) "validateModifySet": (testhelper.ClassificationResult) {
        Name: (string) (len=17) "validateModifySet",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=19) "waitingSubscription",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=17) "known_data_object"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=2) {
      (string) (len=6) "Reject": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "Reject",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=12) "SubscriberId": (testhelper.ClassificationResult) {
        Name: (string) (len=12) "SubscriberId",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=25) "known_database_identifier"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=47) "validateOpUpdateConfigurationSetTrackingOptions",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=17) "known_data_object"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=2) {
      (string) (len=16) "HandleInitialize": (testhelper.ClassificationResult) {
        Name: (string) (len=16) "HandleInitialize",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=7) "OwnerID": (testhelper.ClassificationResult) {
        Name: (string) (len=7) "OwnerID",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=25) "known_database_identifier"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=16) "userNetworkState",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=34) "valid_object_with_valid_properties"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=2) {
      (string) (len=11) "WorkHistory": (testhelper.ClassificationResult) {
        Name: (string) (len=11) "WorkHistory",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "username": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "username",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=19) "viewOauthSignupVars",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=34) "valid_object_with_valid_properties"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=14) {
      (string) (len=11) "AccessToken": (testhelper.ClassificationResult) {
        Name: (string) (len=11) "AccessToken",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "ClientID": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "ClientID",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=25) "known_database_identifier"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "Email": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "Email",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=7) "Flashes": (testhelper.ClassificationResult) {
        Name: (string) (len=7) "Flashes",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "InviteCode": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "InviteCode",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "Login": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "Login",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=7) "Message": (testhelper.ClassificationResult) {
        Name: (string) (len=7) "Message",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "Provider": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "Provider",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=2) "To": (testhelper.ClassificationResult) {
        Name: (string) (len=2) "To",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "TokenAlias": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "TokenAlias",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=9) "TokenHash": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "TokenHash",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=15) "TokenRemoteUser": (testhelper.ClassificationResult) {
        Name: (string) (len=15) "TokenRemoteUser",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=13) "TokenUsername": (testhelper.ClassificationResult) {
        Name: (string) (len=13) "TokenUsername",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "Username": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "Username",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=12) "userResolver",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=34) "valid_object_with_valid_properties"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=4) {
      (string) (len=13) "Acquaintances": (testhelper.ClassificationResult) {
        Name: (string) (len=13) "Acquaintances",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=7) "Friends": (testhelper.ClassificationResult) {
        Name: (string) (len=7) "Friends",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "Likes": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "Likes",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=4) "Pets": (testhelper.ClassificationResult) {
        Name: (string) (len=4) "Pets",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=14) "userDetailResp",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=34) "valid_object_with_valid_properties"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=16) {
      (string) (len=3) "Age": (testhelper.ClassificationResult) {
        Name: (string) (len=3) "Age",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "Alias": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "Alias",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=9) "AvatarURL": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "AvatarURL",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=7) "DeptIDs": (testhelper.ClassificationResult) {
        Name: (string) (len=7) "DeptIDs",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "Email": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "Email",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=7) "Extattr": (testhelper.ClassificationResult) {
        Name: (string) (len=7) "Extattr",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=6) "Gender": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "Gender",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=9) "IsEnabled": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "IsEnabled",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=14) "IsLeaderInDept": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "IsLeaderInDept",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=6) "Mobile": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "Mobile",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=4) "Name": (testhelper.ClassificationResult) {
        Name: (string) (len=4) "Name",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "Position": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "Position",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=9) "QRCodeURL": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "QRCodeURL",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=6) "Status": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "Status",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=15) "TelephoneNumber": (testhelper.ClassificationResult) {
        Name: (string) (len=15) "TelephoneNumber",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=6) "UserID": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "UserID",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=25) "known_database_identifier"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=9) "GetAmount",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=17) "known_data_object"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=4) {
      (string) (len=8) "GetFeeAm": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "GetFeeAm",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=9) "GetWallet": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "GetWallet",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=7) "PayerId": (testhelper.ClassificationResult) {
        Name: (string) (len=7) "PayerId",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=25) "known_database_identifier"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "SetFeeAm": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "SetFeeAm",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=12) "userResponse",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=34) "valid_object_with_valid_properties"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=5) {
      (string) (len=11) "BankAccount": (testhelper.ClassificationResult) {
        Name: (string) (len=11) "BankAccount",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "Email": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "Email",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "FullName": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "FullName",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=17) "PasswordChangedAt": (testhelper.ClassificationResult) {
        Name: (string) (len=17) "PasswordChangedAt",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "Username": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "Username",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=9) "vmContext",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=36) "invalid_object_with_valid_properties"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=46) {
      (string) (len=7) "AddCode": (testhelper.ClassificationResult) {
        Name: (string) (len=7) "AddCode",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=11) "AddLogEntry": (testhelper.ClassificationResult) {
        Name: (string) (len=11) "AddLogEntry",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=16) "AddReturnMessage": (testhelper.ClassificationResult) {
        Name: (string) (len=16) "AddReturnMessage",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=25) "AddTxValueToSmartContract": (testhelper.ClassificationResult) {
        Name: (string) (len=25) "AddTxValueToSmartContract",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=14) "BlockChainHook": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "BlockChainHook",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "CallLogs": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "CallLogs",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=21) "valid_unknown_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=9) "CanUnJail": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "CanUnJail",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "CleanCache": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "CleanCache",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=19) "CleanStorageUpdates": (testhelper.ClassificationResult) {
        Name: (string) (len=19) "CleanStorageUpdates",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=14) "CreateVMOutput": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "CreateVMOutput",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "CryptoHook": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "CryptoHook",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=14) "DeploySystemSC": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "DeploySystemSC",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=20) "ExecuteOnDestContext": (testhelper.ClassificationResult) {
        Name: (string) (len=20) "ExecuteOnDestContext",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=6) "Finish": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "Finish",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=7) "GasLeft": (testhelper.ClassificationResult) {
        Name: (string) (len=7) "GasLeft",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "GetBalance": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "GetBalance",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=11) "GetContract": (testhelper.ClassificationResult) {
        Name: (string) (len=11) "GetContract",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "GetStorage": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "GetStorage",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=11) "IsBadRating": (testhelper.ClassificationResult) {
        Name: (string) (len=11) "IsBadRating",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=14) "IsInterfaceNil": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "IsInterfaceNil",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=11) "IsValidator": (testhelper.ClassificationResult) {
        Name: (string) (len=11) "IsValidator",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=22) "SendGlobalSettingToAll": (testhelper.ClassificationResult) {
        Name: (string) (len=22) "SendGlobalSettingToAll",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=14) "SetGasProvided": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "SetGasProvided",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=12) "SetSCAddress": (testhelper.ClassificationResult) {
        Name: (string) (len=12) "SetSCAddress",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=22) "valid_extended_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "SetStorage": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "SetStorage",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=20) "SetSystemSCContainer": (testhelper.ClassificationResult) {
        Name: (string) (len=20) "SetSystemSCContainer",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=29) "StatusFromValidatorStatistics": (testhelper.ClassificationResult) {
        Name: (string) (len=29) "StatusFromValidatorStatistics",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "Transfer": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "Transfer",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=6) "UseGas": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "UseGas",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=25) "addContractDeployToOutput": (testhelper.ClassificationResult) {
        Name: (string) (len=25) "addContractDeployToOutput",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=14) "blockChainHook": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "blockChainHook",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=14) "chanceComputer": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "chanceComputer",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=16) "copyToNewContext": (testhelper.ClassificationResult) {
        Name: (string) (len=16) "copyToNewContext",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=23) "createContractCallInput": (testhelper.ClassificationResult) {
        Name: (string) (len=23) "createContractCallInput",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "cryptoHook": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "cryptoHook",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=12) "gasRemaining": (testhelper.ClassificationResult) {
        Name: (string) (len=12) "gasRemaining",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=11) "inputParser": (testhelper.ClassificationResult) {
        Name: (string) (len=11) "inputParser",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=12) "mergeContext": (testhelper.ClassificationResult) {
        Name: (string) (len=12) "mergeContext",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=6) "output": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "output",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=14) "outputAccounts": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "outputAccounts",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=13) "returnMessage": (testhelper.ClassificationResult) {
        Name: (string) (len=13) "returnMessage",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=9) "scAddress": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "scAddress",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=22) "valid_extended_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=14) "softCleanCache": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "softCleanCache",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=13) "storageUpdate": (testhelper.ClassificationResult) {
        Name: (string) (len=13) "storageUpdate",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=15) "systemContracts": (testhelper.ClassificationResult) {
        Name: (string) (len=15) "systemContracts",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=19) "validatorAccountsDB": (testhelper.ClassificationResult) {
        Name: (string) (len=19) "validatorAccountsDB",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=20) "vehicleServiceClient",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=34) "valid_object_with_valid_properties"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=9) {
      (string) (len=13) "CreateVehicle": (testhelper.ClassificationResult) {
        Name: (string) (len=13) "CreateVehicle",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "GetVehicle": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "GetVehicle",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=12) "ListVehicles": (testhelper.ClassificationResult) {
        Name: (string) (len=12) "ListVehicles",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=20) "SearchFuzzedVehicles": (testhelper.ClassificationResult) {
        Name: (string) (len=20) "SearchFuzzedVehicles",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=14) "SearchVehicles": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "SearchVehicles",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=13) "UpdateVehicle": (testhelper.ClassificationResult) {
        Name: (string) (len=13) "UpdateVehicle",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=21) "UpdateVehicleLocation": (testhelper.ClassificationResult) {
        Name: (string) (len=21) "UpdateVehicleLocation",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=25) "VehicleRegistrationNumber": (testhelper.ClassificationResult) {
        Name: (string) (len=25) "VehicleRegistrationNumber",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=4) "cars": (testhelper.ClassificationResult) {
        Name: (string) (len=4) "cars",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=16) "wCartQuickSkuJdo",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=17) "known_data_object"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=8) {
      (string) (len=10) "CustomerId": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "CustomerId",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=25) "known_database_identifier"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "ItemName": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "ItemName",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "Price": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "Price",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "Quantity": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "Quantity",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=7) "SkuCode": (testhelper.ClassificationResult) {
        Name: (string) (len=7) "SkuCode",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "SkuId": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "SkuId",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "SkuImage": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "SkuImage",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "SpecWord": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "SpecWord",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=5) "click",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=17) "known_data_object"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=2) {
      (string) (len=16) "HandleInitialize": (testhelper.ClassificationResult) {
        Name: (string) (len=16) "HandleInitialize",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=6) "userID": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "userID",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=25) "known_database_identifier"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=27) "volumesnapshotcontentGetter",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=7) "invalid",
      Reason: (string) (len=19) "unknown_data_object"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=5) {
      (string) (len=3) "Get": (testhelper.ClassificationResult) {
        Name: (string) (len=3) "Get",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=4) "List": (testhelper.ClassificationResult) {
        Name: (string) (len=4) "List",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=9) "ShopperId": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "ShopperId",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=25) "known_database_identifier"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=7) "compare": (testhelper.ClassificationResult) {
        Name: (string) (len=7) "compare",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=9) "informers": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "informers",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=27) "validateOpStartConversation",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=17) "known_data_object"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=2) {
      (string) (len=16) "HandleInitialize": (testhelper.ClassificationResult) {
        Name: (string) (len=16) "HandleInitialize",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=7) "USER_ID": (testhelper.ClassificationResult) {
        Name: (string) (len=7) "USER_ID",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=25) "known_database_identifier"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=21) "verifyCredentialsResp",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=34) "valid_object_with_valid_properties"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=6) {
      (string) (len=6) "Config": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "Config",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=3) "Org": (testhelper.ClassificationResult) {
        Name: (string) (len=3) "Org",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "Policies": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "Policies",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=9) "TeamNames": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "TeamNames",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=6) "UserId": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "UserId",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=25) "known_database_identifier"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "Warnings": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "Warnings",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  },
  (testhelper.ClassificationResult) {
    Name: (string) (len=7) "trading",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=36) "invalid_object_with_valid_properties"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=20) {
      (string) (len=13) "CreateReserve": (testhelper.ClassificationResult) {
        Name: (string) (len=13) "CreateReserve",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=14) "CreditCapacity": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "CreditCapacity",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=21) "valid_unknown_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=9) "QuoteRate": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "QuoteRate",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=13) "SetEapStorage": (testhelper.ClassificationResult) {
        Name: (string) (len=13) "SetEapStorage",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=15) "SetExpectedRate": (testhelper.ClassificationResult) {
        Name: (string) (len=15) "SetExpectedRate",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=11) "SetFpManage": (testhelper.ClassificationResult) {
        Name: (string) (len=11) "SetFpManage",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=14) "SetStableToken": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "SetStableToken",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "SetTrading": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "SetTrading",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=15) "SetTradingProxy": (testhelper.ClassificationResult) {
        Name: (string) (len=15) "SetTradingProxy",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "Start": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "Start",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "Trade": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "Trade",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=14) "conversionRate": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "conversionRate",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=11) "creditTotal": (testhelper.ClassificationResult) {
        Name: (string) (len=11) "creditTotal",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=22) "valid_extended_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "eapStorage": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "eapStorage",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=12) "expectedRate": (testhelper.ClassificationResult) {
        Name: (string) (len=12) "expectedRate",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "fpManage": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "fpManage",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "kyber": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "kyber",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "kyberProxy": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "kyberProxy",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=7) "reserve": (testhelper.ClassificationResult) {
        Name: (string) (len=7) "reserve",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "stbToken": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "stbToken",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  }
}
