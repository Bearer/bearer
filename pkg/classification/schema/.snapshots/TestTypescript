([]testhelper.ClassificationResult) (len=1) {
  (testhelper.ClassificationResult) {
    Name: (string) (len=4) "user",
    Decision: (classify.ClassificationDecision) {
      State: (classify.ValidationState) (len=5) "valid",
      Reason: (string) (len=34) "valid_object_with_valid_properties"
    },
    Properties: (map[string]testhelper.ClassificationResult) (len=34) {
      (string) (len=13) "Acquaintances": (testhelper.ClassificationResult) {
        Name: (string) (len=13) "Acquaintances",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=7) "Friends": (testhelper.ClassificationResult) {
        Name: (string) (len=7) "Friends",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "Username": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "Username",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=12) "access_token": (testhelper.ClassificationResult) {
        Name: (string) (len=12) "access_token",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "accessed": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "accessed",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=9) "auth_time": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "auth_time",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=11) "bankAccount": (testhelper.ClassificationResult) {
        Name: (string) (len=11) "bankAccount",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "biometry": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "biometry",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "concerns": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "concerns",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=14) "creditCapacity": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "creditCapacity",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=13) "creditRecords": (testhelper.ClassificationResult) {
        Name: (string) (len=13) "creditRecords",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=15) "debitCardNumber": (testhelper.ClassificationResult) {
        Name: (string) (len=15) "debitCardNumber",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=11) "description": (testhelper.ClassificationResult) {
        Name: (string) (len=11) "description",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=9) "device_id": (testhelper.ClassificationResult) {
        Name: (string) (len=9) "device_id",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "email": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "email",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=14) "email_verified": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "email_verified",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=6) "emails": (testhelper.ClassificationResult) {
        Name: (string) (len=6) "emails",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=12) "finger_print": (testhelper.ClassificationResult) {
        Name: (string) (len=12) "finger_print",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "group": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "group",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=2) "id": (testhelper.ClassificationResult) {
        Name: (string) (len=2) "id",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=3) "iss": (testhelper.ClassificationResult) {
        Name: (string) (len=3) "iss",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=3) "jti": (testhelper.ClassificationResult) {
        Name: (string) (len=3) "jti",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=4) "name": (testhelper.ClassificationResult) {
        Name: (string) (len=4) "name",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=14) "passportNumber": (testhelper.ClassificationResult) {
        Name: (string) (len=14) "passportNumber",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=12) "realm_access": (testhelper.ClassificationResult) {
        Name: (string) (len=12) "realm_access",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "roles": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "roles",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "scope": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "scope",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=5) "stack": (testhelper.ClassificationResult) {
        Name: (string) (len=5) "stack",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=3) "sub": (testhelper.ClassificationResult) {
        Name: (string) (len=3) "sub",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=3) "typ": (testhelper.ClassificationResult) {
        Name: (string) (len=3) "typ",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=4) "type": (testhelper.ClassificationResult) {
        Name: (string) (len=4) "type",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=13) "userSignature": (testhelper.ClassificationResult) {
        Name: (string) (len=13) "userSignature",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=10) "userWallet": (testhelper.ClassificationResult) {
        Name: (string) (len=10) "userWallet",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=7) "invalid",
          Reason: (string) (len=16) "invalid_property"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      },
      (string) (len=8) "username": (testhelper.ClassificationResult) {
        Name: (string) (len=8) "username",
        Decision: (classify.ClassificationDecision) {
          State: (classify.ValidationState) (len=5) "valid",
          Reason: (string) (len=13) "known_pattern"
        },
        Properties: (map[string]testhelper.ClassificationResult) <nil>
      }
    }
  }
}
