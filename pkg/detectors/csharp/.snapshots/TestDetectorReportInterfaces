([]*detections.Detection) (len=14) {
  (*detections.Detection)({
    Type: (detections.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "csharp",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=9) "config.cs",
      FullFilename: (string) "",
      Language: (string) (len=2) "C#",
      LanguageType: (string) (len=11) "programming",
      StartLineNumber: (*int)(4),
      StartColumnNumber: (*int)(24),
      EndLineNumber: (*int)(4),
      EndColumnNumber: (*int)(28),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=3) "Env",
      ObjectUUID: (string) (len=1) "2",
      FieldName: (string) (len=4) "main",
      FieldUUID: (string) (len=1) "3",
      FieldType: (string) (len=4) "void",
      SimpleFieldType: (string) (len=7) "unknown",
      Classification: (interface {}) <nil>,
      Source: (*schema.Source)(<nil>),
      NormalizedObjectName: (string) (len=3) "env",
      NormalizedFieldName: (string) (len=4) "main"
    }
  }),
  (*detections.Detection)({
    Type: (detections.DetectionType) (len=9) "interface",
    DetectorType: (detectors.Type) (len=6) "csharp",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=9) "config.cs",
      FullFilename: (string) "",
      Language: (string) (len=2) "C#",
      LanguageType: (string) (len=11) "programming",
      StartLineNumber: (*int)(5),
      StartColumnNumber: (*int)(29),
      EndLineNumber: (*int)(5),
      EndColumnNumber: (*int)(84),
      Text: (*string)((len=55) "Environment.GetEnvironmentVariable(\"ORDER_SERVICE_URL\")")
    },
    Value: (interfaces.Interface) {
      Type: (interfaces.Type) (len=3) "url",
      Value: (*values.Value)({
        Parts: ([]values.Part) (len=1) {
          (*values.VariableReference)({
            Type: (values.PartType) (len=18) "variable_reference",
            Identifier: (variables.Identifier) {
              Type: (variables.Type) (len=11) "environment",
              Name: (string) (len=17) "ORDER_SERVICE_URL"
            }
          })
        }
      }),
      VariableName: (string) ""
    }
  }),
  (*detections.Detection)({
    Type: (detections.DetectionType) (len=9) "interface",
    DetectorType: (detectors.Type) (len=6) "csharp",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=9) "config.cs",
      FullFilename: (string) "",
      Language: (string) (len=2) "C#",
      LanguageType: (string) (len=11) "programming",
      StartLineNumber: (*int)(6),
      StartColumnNumber: (*int)(33),
      EndLineNumber: (*int)(6),
      EndColumnNumber: (*int)(135),
      Text: (*string)((len=102) "System.Environment.GetEnvironmentVariable(@\"CUSTOMER_SERVICE_HOST\", EnvironmentVariableTarget.Process)")
    },
    Value: (interfaces.Interface) {
      Type: (interfaces.Type) (len=3) "url",
      Value: (*values.Value)({
        Parts: ([]values.Part) (len=1) {
          (*values.VariableReference)({
            Type: (values.PartType) (len=18) "variable_reference",
            Identifier: (variables.Identifier) {
              Type: (variables.Type) (len=11) "environment",
              Name: (string) (len=21) "CUSTOMER_SERVICE_HOST"
            }
          })
        }
      }),
      VariableName: (string) ""
    }
  }),
  (*detections.Detection)({
    Type: (detections.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "csharp",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "urls.cs",
      FullFilename: (string) "",
      Language: (string) (len=2) "C#",
      LanguageType: (string) (len=11) "programming",
      StartLineNumber: (*int)(7),
      StartColumnNumber: (*int)(17),
      EndLineNumber: (*int)(7),
      EndColumnNumber: (*int)(21),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=10) "CSharpTest",
      ObjectUUID: (string) (len=1) "5",
      FieldName: (string) (len=4) "Name",
      FieldUUID: (string) (len=1) "6",
      FieldType: (string) (len=6) "string",
      SimpleFieldType: (string) (len=6) "string",
      Classification: (interface {}) <nil>,
      Source: (*schema.Source)(<nil>),
      NormalizedObjectName: (string) (len=10) "csharptest",
      NormalizedFieldName: (string) (len=4) "name"
    }
  }),
  (*detections.Detection)({
    Type: (detections.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "csharp",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "urls.cs",
      FullFilename: (string) "",
      Language: (string) (len=2) "C#",
      LanguageType: (string) (len=11) "programming",
      StartLineNumber: (*int)(40),
      StartColumnNumber: (*int)(16),
      EndLineNumber: (*int)(40),
      EndColumnNumber: (*int)(19),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=10) "CSharpTest",
      ObjectUUID: (string) (len=1) "5",
      FieldName: (string) (len=3) "Get",
      FieldUUID: (string) (len=1) "7",
      FieldType: (string) (len=4) "void",
      SimpleFieldType: (string) (len=7) "unknown",
      Classification: (interface {}) <nil>,
      Source: (*schema.Source)(<nil>),
      NormalizedObjectName: (string) (len=10) "csharptest",
      NormalizedFieldName: (string) (len=3) "get"
    }
  }),
  (*detections.Detection)({
    Type: (detections.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "csharp",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "urls.cs",
      FullFilename: (string) "",
      Language: (string) (len=2) "C#",
      LanguageType: (string) (len=11) "programming",
      StartLineNumber: (*int)(43),
      StartColumnNumber: (*int)(16),
      EndLineNumber: (*int)(43),
      EndColumnNumber: (*int)(25),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=10) "CSharpTest",
      ObjectUUID: (string) (len=1) "5",
      FieldName: (string) (len=9) "Something",
      FieldUUID: (string) (len=1) "8",
      FieldType: (string) (len=4) "void",
      SimpleFieldType: (string) (len=7) "unknown",
      Classification: (interface {}) <nil>,
      Source: (*schema.Source)(<nil>),
      NormalizedObjectName: (string) (len=10) "csharptest",
      NormalizedFieldName: (string) (len=9) "something"
    }
  }),
  (*detections.Detection)({
    Type: (detections.DetectionType) (len=9) "interface",
    DetectorType: (detectors.Type) (len=6) "csharp",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "urls.cs",
      FullFilename: (string) "",
      Language: (string) (len=2) "C#",
      LanguageType: (string) (len=11) "programming",
      StartLineNumber: (*int)(15),
      StartColumnNumber: (*int)(28),
      EndLineNumber: (*int)(15),
      EndColumnNumber: (*int)(48),
      Text: (*string)((len=20) "\"string.example.com\"")
    },
    Value: (interfaces.Interface) {
      Type: (interfaces.Type) (len=3) "url",
      Value: (*values.Value)({
        Parts: ([]values.Part) (len=1) {
          (*values.String)({
            Type: (values.PartType) (len=6) "string",
            Value: (string) (len=18) "string.example.com"
          })
        }
      }),
      VariableName: (string) ""
    }
  }),
  (*detections.Detection)({
    Type: (detections.DetectionType) (len=9) "interface",
    DetectorType: (detectors.Type) (len=6) "csharp",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "urls.cs",
      FullFilename: (string) "",
      Language: (string) (len=2) "C#",
      LanguageType: (string) (len=11) "programming",
      StartLineNumber: (*int)(19),
      StartColumnNumber: (*int)(29),
      EndLineNumber: (*int)(19),
      EndColumnNumber: (*int)(49),
      Text: (*string)((len=20) "$\"a.{s}.example.com\"")
    },
    Value: (interfaces.Interface) {
      Type: (interfaces.Type) (len=3) "url",
      Value: (*values.Value)({
        Parts: ([]values.Part) (len=3) {
          (*values.String)({
            Type: (values.PartType) (len=6) "string",
            Value: (string) (len=2) "a."
          }),
          (*values.Unknown)({
            Type: (values.PartType) (len=7) "unknown",
            Parts: ([]values.Part) <nil>
          }),
          (*values.String)({
            Type: (values.PartType) (len=6) "string",
            Value: (string) (len=12) ".example.com"
          })
        }
      }),
      VariableName: (string) ""
    }
  }),
  (*detections.Detection)({
    Type: (detections.DetectionType) (len=9) "interface",
    DetectorType: (detectors.Type) (len=6) "csharp",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "urls.cs",
      FullFilename: (string) "",
      Language: (string) (len=2) "C#",
      LanguageType: (string) (len=11) "programming",
      StartLineNumber: (*int)(21),
      StartColumnNumber: (*int)(33),
      EndLineNumber: (*int)(21),
      EndColumnNumber: (*int)(69),
      Text: (*string)((len=36) "$@\"{s}.interpolated-raw.example.com\"")
    },
    Value: (interfaces.Interface) {
      Type: (interfaces.Type) (len=3) "url",
      Value: (*values.Value)({
        Parts: ([]values.Part) (len=2) {
          (*values.Unknown)({
            Type: (values.PartType) (len=7) "unknown",
            Parts: ([]values.Part) <nil>
          }),
          (*values.String)({
            Type: (values.PartType) (len=6) "string",
            Value: (string) (len=29) ".interpolated-raw.example.com"
          })
        }
      }),
      VariableName: (string) ""
    }
  }),
  (*detections.Detection)({
    Type: (detections.DetectionType) (len=9) "interface",
    DetectorType: (detectors.Type) (len=6) "csharp",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "urls.cs",
      FullFilename: (string) "",
      Language: (string) (len=2) "C#",
      LanguageType: (string) (len=11) "programming",
      StartLineNumber: (*int)(31),
      StartColumnNumber: (*int)(29),
      EndLineNumber: (*int)(31),
      EndColumnNumber: (*int)(61),
      Text: (*string)((len=32) "\"other-dict-literal.example.com\"")
    },
    Value: (interfaces.Interface) {
      Type: (interfaces.Type) (len=3) "url",
      Value: (*values.Value)({
        Parts: ([]values.Part) (len=1) {
          (*values.String)({
            Type: (values.PartType) (len=6) "string",
            Value: (string) (len=30) "other-dict-literal.example.com"
          })
        }
      }),
      VariableName: (string) ""
    }
  }),
  (*detections.Detection)({
    Type: (detections.DetectionType) (len=9) "interface",
    DetectorType: (detectors.Type) (len=6) "csharp",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "urls.cs",
      FullFilename: (string) "",
      Language: (string) (len=2) "C#",
      LanguageType: (string) (len=11) "programming",
      StartLineNumber: (*int)(37),
      StartColumnNumber: (*int)(35),
      EndLineNumber: (*int)(37),
      EndColumnNumber: (*int)(53),
      Text: (*string)((len=18) "\"prop.example.com\"")
    },
    Value: (interfaces.Interface) {
      Type: (interfaces.Type) (len=3) "url",
      Value: (*values.Value)({
        Parts: ([]values.Part) (len=1) {
          (*values.String)({
            Type: (values.PartType) (len=6) "string",
            Value: (string) (len=16) "prop.example.com"
          })
        }
      }),
      VariableName: (string) ""
    }
  }),
  (*detections.Detection)({
    Type: (detections.DetectionType) (len=9) "interface",
    DetectorType: (detectors.Type) (len=6) "csharp",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "urls.cs",
      FullFilename: (string) "",
      Language: (string) (len=2) "C#",
      LanguageType: (string) (len=11) "programming",
      StartLineNumber: (*int)(48),
      StartColumnNumber: (*int)(12),
      EndLineNumber: (*int)(48),
      EndColumnNumber: (*int)(33),
      Text: (*string)((len=21) "\".concat.example.com\"")
    },
    Value: (interfaces.Interface) {
      Type: (interfaces.Type) (len=3) "url",
      Value: (*values.Value)({
        Parts: ([]values.Part) (len=1) {
          (*values.String)({
            Type: (values.PartType) (len=6) "string",
            Value: (string) (len=19) ".concat.example.com"
          })
        }
      }),
      VariableName: (string) ""
    }
  }),
  (*detections.Detection)({
    Type: (detections.DetectionType) (len=9) "interface",
    DetectorType: (detectors.Type) (len=6) "csharp",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "urls.cs",
      FullFilename: (string) "",
      Language: (string) (len=2) "C#",
      LanguageType: (string) (len=11) "programming",
      StartLineNumber: (*int)(50),
      StartColumnNumber: (*int)(15),
      EndLineNumber: (*int)(50),
      EndColumnNumber: (*int)(47),
      Text: (*string)((len=32) "\"simple\" + \".concat.example.com\"")
    },
    Value: (interfaces.Interface) {
      Type: (interfaces.Type) (len=3) "url",
      Value: (*values.Value)({
        Parts: ([]values.Part) (len=1) {
          (*values.String)({
            Type: (values.PartType) (len=6) "string",
            Value: (string) (len=25) "simple.concat.example.com"
          })
        }
      }),
      VariableName: (string) ""
    }
  }),
  (*detections.Detection)({
    Type: (detections.DetectionType) (len=9) "interface",
    DetectorType: (detectors.Type) (len=6) "csharp",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "urls.cs",
      FullFilename: (string) "",
      Language: (string) (len=2) "C#",
      LanguageType: (string) (len=11) "programming",
      StartLineNumber: (*int)(60),
      StartColumnNumber: (*int)(5),
      EndLineNumber: (*int)(60),
      EndColumnNumber: (*int)(30),
      Text: (*string)((len=25) "\"list-string.example.com\"")
    },
    Value: (interfaces.Interface) {
      Type: (interfaces.Type) (len=3) "url",
      Value: (*values.Value)({
        Parts: ([]values.Part) (len=1) {
          (*values.String)({
            Type: (values.PartType) (len=6) "string",
            Value: (string) (len=23) "list-string.example.com"
          })
        }
      }),
      VariableName: (string) ""
    }
  })
}
