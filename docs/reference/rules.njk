---
title: Rules
---
{# This content of this page is generated. #}
{% renderTemplate "liquid,md" %}
# Rules

Rules are ways to detect security risks and vulnerabilities across your codebase and enforce best practices. Bearer CLI's [security report](/explanations/reports/#security-report) allows you to quickly identify rule violations in your code.

The built-in rules aim to keep you protected from the most cirtical security risks and vulnerabilities of web applcations and include corresponding [Common Weakness Enumeration](https://cwe.mitre.org/data/index.html) (CWE) and [OWASP](https://owasp.org/Top10) links to help you identify them. 

{% endrenderTemplate %}

<form action="" id="rule-search">
  <label for="search-input" class="font-bold">Search</label>
  <input class="block w-full px-4 py-2 border-neutral-300 border-2 rounded dark:text-neutral-500" type="search" name="" id="search-input" placeholder="Try searching for CWE-201, encryption, rails, etc.">

  <div class="flex gap-2 mt-4">
    <div id="lang-filters">
      <button>Languages</button>
      <ul class="list-none p-0 not-prose flex flex-col gap-4">
        <li>
          <input type="checkbox" name="lang-ruby" id="lang-ruby" class='filter-toggle' value="ruby">
          <label for="lang-ruby" class="toggle-label">Ruby</label>
        </li>
        <li>
          <input type="checkbox" name="lang-jsts" id="lang-jsts" class='filter-toggle' value="javascript">
          <label for="lang-jsts" class="toggle-label">JS / TS</label>
        </li>
        <li>
          <input type="checkbox" name="lang-java" id="lang-java" class='filter-toggle' value="java_">
          <label for="lang-java" class="toggle-label">Java</label>
        </li>
      </ul>
    </div>
    <div>
      <button>OWASP</button>
      <ul class="list-none p-0 not-prose flex flex-col gap-4" id="owasp-filters">
        <li>
          <input type="checkbox" name="owasp-01" id="owasp-01" class='filter-toggle' value="A01:2021">
          <label for="owasp-01" class="toggle-label">OWASP A01:2021</label>
        </li>
        <li>
          <input type="checkbox" name="owasp-02" id="owasp-02" class='filter-toggle' value="A02:2021">
          <label for="owasp-02" class="toggle-label">OWASP A02:2021</label>
        </li>
        <li>
          <input type="checkbox" name="owasp-03" id="owasp-03" class='filter-toggle' value="A03:2021">
          <label for="owasp-03" class="toggle-label">OWASP A03:2021</label>
        </li>
        <li>
          <input type="checkbox" name="owasp-04" id="owasp-04" class='filter-toggle' value="A04:2021">
          <label for="owasp-04" class="toggle-label">OWASP A04:2021</label>
        </li>
      </ul>
    </div>
  </div>
</form>

<ul class="flex flex-col gap-4 not-prose list-none p-0">
  {% for rule in rules | sortById %}
    <li class="block rounded border-2 border-neutral-200 dark:border-code p-4 js-rule">
      <a href="/reference/rules/{{rule.metadata.id}}/">
        <h2 class="font-bold text-main dark:text-main-300">{{rule.metadata.id}}</h2>
        <p>
          {{rule.metadata.description}}
        </p>
      </a>
      <div>
        <ul class="flex gap-2 justify-end">
          {% if rule.languages %}
            <li class=" text-xs py-2 px-4 rounded-full bg-neutral-200 dark:bg-code">{{rule.languages}}</li>
          {% endif %}
          {% for id in rule.metadata.cwe_id %}
            <li class=" text-xs py-2 px-4 rounded-full bg-neutral-200 dark:bg-code">CWE-{{id}}</li>
          {% endfor %}
          {% for id in rule.owasp_ids %}
            <li class=" text-xs py-2 px-4 rounded-full bg-neutral-200 dark:bg-code">{{id}}</li>
          {% endfor %}
        </ul>
      </div>
    </li>
  {% endfor %}
</ul>

<script>
  function compare(item, query, filters) {
    let source = item
      .innerHTML
      .toLowerCase();
    let filtersActive = filters.length === 0
      ? false
      : true;

    let found = false
    if (filtersActive) {
      filters.forEach(f => {
        if (source.includes(f.value.toLowerCase())) {
          found = true
        }
      })
      if (source.includes(query) && found === true) {
        return true
      }
    } else {
      if (source.includes(query)) {
        return true
      }
      return false
    }
  }

  function filterResults() {
    const rules = document.querySelectorAll('.js-rule')
    const langs = document.querySelectorAll('#lang-filters .filter-toggle:checked')
    const owasp = document.querySelectorAll('#owasp-filters .filter-toggle:checked')
    const query = document
      .getElementById('search-input')
      .value
      .toLowerCase();
    rules.forEach(rule => {
      if (compare(rule, query, langs) && compare(rule, query, owasp)) {
        rule
          .classList
          .remove('hidden')
      } else {
        if (!rule.classList.contains('hidden')) {
          rule
            .classList
            .add('hidden')
        }
      }
    })
  };
  const input = document.getElementById('search-input')
  const checkboxes = document.querySelectorAll('.filter-toggle')
  const form = document.getElementById('rule-search')
  let timer;
  const delay = 300;
  form.addEventListener('submit', e => {
    e.preventDefault()
  })
  input.addEventListener('keyup', (e) => {
    clearTimeout(timer)
    timer = setTimeout(filterResults, delay)
  })

  checkboxes.forEach(checkbox => {
    checkbox.addEventListener('change', e => {
      filterResults()
    })
  })
</script>